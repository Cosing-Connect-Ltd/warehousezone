@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ProductWebsiteGridView";
        settings.CallbackRouteValues = new { Controller = ViewBag.Controller, Action = "WebsiteProductsList", SiteId = ViewBag.SiteId};
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = ViewBag.Controller, Action = "SaveNavigationProductList", SiteId = ViewBag.SiteId};
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.CustomBindingRouteValuesCollection.Add(
            GridViewOperationType.Paging,
            new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListPaging", SiteId = ViewBag.SiteId }
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Filtering,
        new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListFiltering", SiteId = ViewBag.SiteId}
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Sorting,
        new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListSorting", SiteId = ViewBag.SiteId}
        );

        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
        settings.KeyFieldName = "Id";

        settings.Settings.ShowHeaderFilterButton = false;
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFilterRow = true;
        settings.Styles.Header.CssClass = "";

        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.DblClick;
        settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductId";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Name";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "SKUCode";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "DepartmentName";
            c.Caption = "Department";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductGroupName";
            c.Caption = "Group";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductCategoryName";
            c.Caption = "Category";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "IsActive";
            c.Caption = "Active";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            c.EditorProperties().CheckBox(p =>
            {
                p.ClientSideEvents.ValueChanged = "function(s,e){ OnDetailsChanged(s,e);}";
                p.ValidationSettings.Display = Display.Dynamic;
                p.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
            });

        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "SortOrder";
            c.Caption = "Sort Order";
            c.ColumnType = MVCxGridViewColumnType.SpinEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditorProperties().SpinEdit(p =>
            {
                p.MinValue = 0;
                p.MaxValue = 1000000000;
                p.ClientSideEvents.ValueChanged = "function(s,e){ OnDetailsChanged(s,e);}";
            });
        });

        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginGridCallback(s, e); }";
        settings.ClientSideEvents.FocusedCellChanging = "OnSpecialPricesGridFocusChanged";
        settings.ClientSideEvents.EndCallback = "OnEndGridCallback";

        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };



    });

}

@grid.BindToCustomData(Model).GetHtml()