<script type="text/javascript">
    function OnGridFocusedRowChanged(s, e) {
        $('.selkey').val(s.GetRowKey(s.GetFocusedRowIndex()));
    }
    MVCxClientGlobalEvents.AddControlsInitializedEventHandler(OnBeginGridCallback);

    function OnBeginGridCallback(s, e) {
        e.customArgs = MVCxClientUtils.GetSerializedEditorValuesInContainer("frmPriceGroupPrices");
        var rowIndex = parseInt($("#RowIndexForProductId").val()) || 0;
        e.customArgs["ProductID"] = $("#ProductId").val();
    }

    function OnEndGridCallback(s, e) {
        var lastIndex = parseInt($("#LastEditingRowIndex").val()) || 0;
        SetGridEditorToRowIndex(lastIndex);
    }

    function SetGridEditorToRowIndex(index) {
        ProductEditListGridView.batchEditApi.StartEdit(index, ProductEditListGridView.GetColumnByField($("#LastEditingColIndex").val()).index);
    }

    function OnDetailsChanged(s, e) {
        ProductEditListGridView.UpdateEdit();
    }

    function OnSpecialPricesGridFocusChanged(s, e) {
        if (e.cellInfo.rowVisibleIndex >= 0) {
            $("#LastEditingRowIndex").val(e.cellInfo.rowVisibleIndex);
        }

        $("#RowIndexForProductId").val(e.cellInfo.rowVisibleIndex);
        $("#LastEditingColIndex").val(e.cellInfo.column.fieldName);
    }
</script>

@Html.Hidden("LastEditingRowIndex")
@Html.Hidden("LastEditingColIndex")
@Html.Hidden("RowIndexForProductId")
@Html.Hidden("selkey")
@Html.Action("_EditableProductGrid", new { AssociatedItem = ViewBag.AssociatedItem, KitType = ViewBag.KitTypes, productId = ViewBag.ProductId })
