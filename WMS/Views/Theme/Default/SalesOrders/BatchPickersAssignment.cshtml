@using Ganedata.Core.Entities.Helpers
@model IEnumerable<Ganedata.Core.Entities.Domain.Order>
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

@{
    ViewBag.Title = "Pickers Batch Orders Assignment";
}

<h2><span>@ViewBag.Title</span></h2>

<script type="text/javascript">
    function OnBeginCallbackSO(s, e) {
        e.customArgs['selectedPickerId'] = $('#SelectedPicker :selected').val();
    }

    function refreshGrids() {
        _SalesOrderListGridView_PickerAssigned.Refresh();
        _SalesOrderListGridView_PickerUnassigned.Refresh();
    }

    function SelectionChanged(s, e) {
        s.GetSelectedFieldValues("OrderID", GetSelectedFieldValuesCallback);
    }

    function GetSelectedFieldValuesCallback(values) {
        $("#SelectedOrderIds").val(values.join());
    }

    function assigneOrders() {
        var selectedPickerId = $('#SelectedPicker :selected').val()
        if (!selectedPickerId || selectedPickerId <= 0) { alert("Picker is not selected"); return; }
        assignSelectedOrders(selectedPickerId)
    }

    function unassignOrders() {
        assignSelectedOrders(null)
    }

    function assignSelectedOrders(selectedPickerId) {
        var selectedOrderIds = $("#SelectedOrderIds").val();
        if (!selectedOrderIds || selectedOrderIds.length <= 0) { alert("Please select order first, to assign to the picker"); return; }
        LoadingPanel.Show();
        $.ajax({
            type: "POST",
            url: '/SalesOrders/UpdateOrdersPicker/',
            data: { orderIds: selectedOrderIds.split(','), pickerId: selectedPickerId },
            dataType: 'json',
            success: function (data) {
                refreshGrids()

                LoadingPanel.Hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                LoadingPanel.Hide();
                alert('Error' + textStatus + "/" + errorThrown);
            }
        });
    }

    $(document).ready(function () {
        $("#tabs ul li a").click(function (e) {
            e.preventDefault();
            refreshGrids(e);
        });
    });
</script>

@Html.Hidden("SelectedOrderIds")

<div class="col-md-12 report-date-header">
    <div class="input-group col-lg-6 col-md-12 justify-content-start align-items-start">
        @Html.Label("Selected Picker:", htmlAttributes: new { @class = "col-md-3 pt-2" })
        <div class="col-md-9">
            @Html.DropDownList("SelectedPicker", ViewBag.Pickers as SelectList, "All Picker", new { @class = "chosen-select form-control", onchange = "refreshGrids();" })
        </div>
    </div>
</div>

<div id="tabs" style="visibility: hidden">
    <ul>
        <li><a href="#SOA">Orders</a></li>
        <li><a href="#SOC">Assigned Orders</a></li>
    </ul>

    <div class="col-md-12 p-0 legend-pane">
        <p class="pull-left" style="text-align:left;margin-bottom:0px"><label style="height:12px;width:24px;background-color:lightcoral;vertical-align:middle"></label>  Proforma</p>
        <p class="pull-left" style="text-align:left;margin-bottom:0px"><label style="height:12px;width:24px;background-color:orange;vertical-align:middle"></label>  Quotation</p>
        <p class="pull-left" style="text-align:left;margin-bottom:0px"><label style="height:12px;width:24px;background-color:lightsteelblue;vertical-align:middle"></label>  Loan</p>
        <p class="pull-left" style="text-align:left;margin-bottom:0px"><label style="height:12px;width:24px;background-color:lightgreen;vertical-align:middle"></label>  Samples</p>
        <div class="clearfix"></div>
    </div>

    <div id="SOA">
        @Html.Action("_SalesOrders", "Order", new { pickerId = ViewBag.PickerId, type = 4 })
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <a type="button" class="btn btn-primary" href="javascript:assigneOrders()"><b class="fa fa-chain"></b>Assign Orders</a>
            <a type="button" class="btn btn-primary" href="~/Reports/PickersOrdersReport"><b class="fa fa-chain"></b>Print Assigned Orders</a>
        </div>
    </div>
    <div id="SOC">
        @Html.Action("_SalesOrders", "Order", new { pickerId = ViewBag.PickerId, type = 3 })
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <a type="button" class="btn btn-primary" href="javascript:unassignOrders()"><b class="fa fa-chain-broken"></b>UnAssign Orders</a>
            <a type="button" class="btn btn-primary" href="~/Reports/PickersOrdersReport"><b class="fa fa-chain"></b>Print Assigned Orders</a>
        </div>
    </div>
</div>