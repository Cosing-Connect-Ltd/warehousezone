@model Ganedata.Core.Entities.Domain.ApiCredentials
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit }
        )
}

@{
    ViewBag.Title = "Edit";
}

<h2><span>Edit ApiCredential</span></h2>


@Html.Hidden("selkey", null, new { @class = "selkey" })
@Html.Hidden("selkeysaveapiCredentials", null)


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div id="apiCredential-detail">
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ApiKey, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ApiKey)
                    @Html.ValidationMessageFor(model => model.ApiKey)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ApiTypes, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EnumDropDownListFor(model => model.ApiTypes, htmlAttributes: new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.ApiTypes)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ApiUrl, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ApiUrl)
                    @Html.ValidationMessageFor(model => model.ApiUrl)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DevExpress().DateEdit(m =>
                    {
                        m.Name = "ExpiryDate";
                        m.Width = System.Web.UI.WebControls.Unit.Pixel(120);
                        m.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                        m.ControlStyle.CssClass = "form-control";
                        m.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";

                    }).Bind(Model.ExpiryDate).GetHtml()
                    @Html.ValidationMessageFor(model => model.ExpiryDate)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password)
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AccountNumber)
                    @Html.ValidationMessageFor(model => model.AccountNumber)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.DefaultWarehouseId, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(u => u.DefaultWarehouseId, ViewBag.TenantLocations as SelectList, "Select Location", new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.DefaultWarehouseId)
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.SiteID, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(u => u.SiteID, ViewBag.TenantWebsites as SelectList, "Select Site", new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.SiteID)
                </div>
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                <div class="btn btn-default"> @Html.ActionLink("Back to List", "Index")</div>
            </div>
        </div>
    </div>
}



