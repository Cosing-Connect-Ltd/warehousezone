<script src="~/Scripts/jscolor.js"></script>
@model IList<Ganedata.Core.Models.UISettingViewModel>
@using Ganedata.Core.Entities.Helpers
@using Ganedata.Core.Entities.Enums

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.ColorEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.ColorEdit }
        )
}

<h2><span>Website UI Customization (@ViewBag.SiteName)</span></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (Model.Count() == 0)
    {
        <div class="col-md-12 text-center mt-5">No UI customization item available for (@ViewBag.SiteName) theme!</div>
    }
    else
    {
        for (int i = 0; i < Model.Count(); i++)
        {
            <div class="col-md-6 d-inline-block float-left">
                @Html.HiddenFor(m => m[i].Id)
                @Html.HiddenFor(m => m[i].SiteId)
                @Html.HiddenFor(m => m[i].UISettingItem.Id)
                @Html.HiddenFor(m => m[i].UISettingItem.Key)

                <label class="col-md-8 float-left form-check-label">@Model[i].UISettingItem.DisplayName</label>
                <div class="col-md-4 float-left">
                    @Html.TextBoxFor(m => m[i].Value, new { @type = (Model[i].UISettingItem.InputType == UISettingItemInputType.Color ? "Text" : Enum.GetName(typeof(UISettingItemInputType), Model[i].UISettingItem.InputType)),
                                                            @class = Model[i].UISettingItem.InputType == UISettingItemInputType.Color ? "jscolor {hash:true, padding:4} form-control" : "form-control"})
                </div>
                @Html.ValidationMessageFor(model => model[i].Value, "The " + Model[i].UISettingItem.DisplayName + " field value is required.", new { @class = "col-md-12 text-danger" })
            </div>
        }

        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                <div class="back-list">@Html.ActionLink("Back to List", "Index", "TenantWebsites", null, new { @class = "btn btn-default" })</div>
            </div>
        </div>
    }
}

