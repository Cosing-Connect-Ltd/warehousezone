@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ProductAllowanceGroupsGridView";
        settings.CallbackRouteValues = new { Controller = ViewBag.Controller, Action = "_ProductAllowanceGroupProductList", SiteId = ViewBag.SiteId };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.CustomBindingRouteValuesCollection.Add(
            GridViewOperationType.Paging,
            new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListPaging", SiteId = ViewBag.SiteId }
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Filtering,
        new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListFiltering", SiteId = ViewBag.SiteId }
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Sorting,
        new { Controller = ViewBag.Controller, Action = "_WebsiteProductsListSorting", SiteId = ViewBag.SiteId }
        );

        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
        settings.KeyFieldName = "Id";

        settings.Settings.ShowHeaderFilterButton = false;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowSelectCheckbox = true;
        settings.CommandColumn.Width=System.Web.UI.WebControls.Unit.Percentage(1);
        settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Styles.Header.CssClass = "";
        settings.ClientSideEvents.SelectionChanged = "SelectionChangeds";


        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;
        settings.SettingsResizing.Visualization = ResizingMode.Live;
        settings.SettingsBehavior.AllowEllipsisInText = true;

        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductId";
            c.Width = System.Web.UI.WebControls.Unit.Percentage(3);
            c.ColumnType = MVCxGridViewColumnType.SpinEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;

        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Name";
            c.Width = System.Web.UI.WebControls.Unit.Percentage(5);
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "SKUCode";
            c.Caption = "SKU Code";
            c.Width = System.Web.UI.WebControls.Unit.Percentage(4);
        });
        if (ViewData["DiscountProduct"] != null)
        {
            var data = (List<int>)ViewData["DiscountProduct"];
            settings.PreRender = (s, e) =>
            {
                var grids = (MVCxGridView)s;
                foreach (int item in data)
                {
                    grids.Selection.SelectRowByKey(item);
                }

            };
        }

        settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.ClientSideEvents.BeginCallback = "OnStartCallback";
        settings.ClientSideEvents.EndCallback = "OnGridEndCallBack";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };



    });

}

@grid.BindToCustomData(Model).GetHtml()