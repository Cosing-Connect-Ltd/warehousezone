@model Ganedata.Core.Entities.Domain.ProductAttributes
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme },
         new StyleSheet { ExtensionType = ExtensionType.UploadControl, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.ColorEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.ColorEdit },
        new Script { ExtensionType = ExtensionType.DateEdit },
          new Script { ExtensionType = ExtensionType.UploadControl }
        )
}

@{
    ViewBag.Title = "Edit Product Attribute ";
}

<h2><span> Edit Product Attribute </span></h2>
@using (Html.BeginForm("Edit", "ProductAttributes"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model=>model.AttributeId)
    <div class="col-md-12 pull-left">
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class="col-md-4">Attribute Name<span style="color:red">*</span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.AttributeName)
                @Html.ValidationMessageFor(model => model.AttributeName)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class="col-md-4">Sort Order<span style="color:red">*</span></label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.SortOrder)
                @Html.ValidationMessageFor(model => model.SortOrder)
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class="col-md-4">Is Color Typed</label>
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsColorTyped)
                @Html.ValidationMessageFor(model => model.IsColorTyped)
            </div>
        </div>
    </div>

    <div class="input-group h-100 justify-content-center align-items-center">
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" value="Save" class="btn btn-primary" />
            <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
        </div>
    </div>

}

