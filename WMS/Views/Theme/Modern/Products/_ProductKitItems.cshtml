@using System.Web.UI.WebControls
@using Ganedata.Core.Entities.Enums
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = ViewBag.settingsName;
        settings.CallbackRouteValues = ViewBag.routeValues;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
        settings.KeyFieldName = "ProductId";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("Name", "Product").Width = Unit.Percentage(60);
        settings.Columns.Add("SKUCode", "Item Code").Width = Unit.Percentage(15);
        settings.Columns.Add("ProductKitTypeEnum").Caption = "Kit Type";
        settings.Columns.Add("ProductKitType").Caption = "Product Type";

        settings.Columns.Add(column =>
        {
            column.Width = Unit.Percentage(10);
            column.Caption = "Quantity";
            column.FieldName = "Quantity";
        });


        //settings.Columns.Add(column =>
        //{
        //    column.Width = System.Web.UI.WebControls.Unit.Percentage(15);
        //    column.Caption = "Actions";

        //    column.SetDataItemTemplateContent(m =>
        //    {
        //        var id = (int)DataBinder.Eval(m.DataItem, "ProductId");
        //        var parentProductId = (int)DataBinder.Eval(m.DataItem, "ParentProductId");
        //        var name = DataBinder.Eval(m.DataItem, "Name").ToString();
        //        var kitId = (int)DataBinder.Eval(m.DataItem, "ProductKitId");
        //        var function = string.Format("EditKitProduct({0},{1})", kitId, 1);
        //        ViewContext.Writer.Write("<a onclick=" + function + "><i class='btn fa fa-pencil'></i></a><a class='btn fa fa-trash' role='button' data-kitType=" + ((int)ProductKitTypeEnum.Kit) + " data-valueid='" + kitId + "' data-action='RemoveKitItemProduct' title='Delete Kit Item' data-controller='Products' id='deleteBtn' data-title='Delete Kit Product' data-message='This cannot be reversed, are you sure you want to remove this Kit item?' data-toggle='modal' data-target='#confirm-delete'></a>");


        //    });
        //});
        settings.SettingsPager.NumericButtonCount = 3;
        settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.ClientSideEvents.EndCallback = "function(s,e){   ModalProductKitAdd_EndCallback(s,e); }";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    });
}
@grid.Bind(Model).GetHtml()