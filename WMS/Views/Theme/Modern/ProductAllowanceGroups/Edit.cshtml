@model Ganedata.Core.Entities.Domain.ProductAllowanceGroup
@using Ganedata.Core.Entities.Helpers
@{
    ViewBag.Title = "Create Product Allowance";

}
@section scripts {

    @Html.DevExpress().GetStyleSheets(
         new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }

        )

    @Html.DevExpress().GetScripts(
           new Script { ExtensionType = ExtensionType.GridView }

        )
}


@{
    ViewBag.Title = "Edit Product Allowance Group";
}

<script>

    function submitformNav() {
        var productids = $("#SelectedProductIds").val();
        if (productids == null || productids == "" || productids == undefined) {
            alert("Select product first");
            return false;
        }
        else {
            $("#ProductsWithIds").val(productids);
        }


    }
    function SelectionChangeds(s, e) {
        s.GetSelectedFieldValues("Id", GetSelectedFieldValuesCallback);
    }
    function GetSelectedFieldValuesCallback(values) {
        $("#SelectedProductIds").val(values.join());
    }
    var command;
    function OnStartCallback(s, e) {
        command = e.command;

    }
    function OnGridEndCallBack(s, e) {
        if (command == "REFRESH") {
            s.UnselectRows();
        }
    }

</script>
<h2><span>Edit Product Allowance Group (@ViewBag.SiteName)</span></h2>

@using (Html.BeginForm("Edit", "ProductAllowanceGroups", FormMethod.Post, new { @class = "form-navigation", onsubmit = "return submitformNav()" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SelectedProductIds)
    @Html.HiddenFor(model => model.SiteID)
    @Html.Hidden("ProductsWithIds")
    <div class="col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-4 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Notes, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-8 pull-left">

            @Html.Action("_ProductAllowanceGroupProductList", new { SiteId = Model.SiteID, ProductAllownceGroupId = Model.Id })

        </div>


    </div> <div class="input-group h-100 justify-content-center align-items-center">
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" class="btn btn-primary" value="Save" />
            <div class="back-list">@Html.ActionLink("Back to List", "Index", new { SiteId = Model.SiteID }, new { @class = "btn btn-default" })</div>
        </div>
    </div>

}

