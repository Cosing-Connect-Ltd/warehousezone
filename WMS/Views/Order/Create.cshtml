@model Ganedata.Core.Entities.Domain.Order
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.PopupControl, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
         new Script { ExtensionType = ExtensionType.GridView },
        new Script { ExtensionType = ExtensionType.PopupControl },
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}

@{
    ViewBag.Title = "Create New Purchase Order";
}
<script type="text/javascript">
    //<![CDATA[

    function OnGridFocusedRowChanged(s, e) {
        var name = s.name;

        if (name.indexOf("gridViewOrdDet") >= 0) {
            $('#selkeyhdPrddet').val(s.GetRowKey(s.GetFocusedRowIndex()));
        }
        $('.selkey').val(s.GetRowKey(s.GetFocusedRowIndex()));
    }
    function OnGetRowValues(values) {
        //alert(values[0]);
        //$('.selkey').val(values[0]);
    }

    // ]]>
</script>
<h2><span>Create PO</span></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("selkeyhdPrddet", 100);



    <div class="leftcol">
        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber)
                @Html.ValidationMessageFor(model => model.OrderNumber)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DevExpress().DateEditFor(m => m.IssueDate,
             settings =>
             {
                 settings.Name = "IssueDate";
                 settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                 settings.Date = DateTime.Now;
                 settings.ClientVisible = true;

             }
         ).GetHtml()
                @Html.ValidationMessageFor(model => model.IssueDate)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DevExpress().DateEditFor(m => m.ExpectedDate,
             settings =>
             {
                 settings.Name = "ExpectedDate";
                 settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                 settings.Date = DateTime.Now;
                 settings.ClientVisible = true;

             }
         ).GetHtml()
                @Html.ValidationMessageFor(model => model.ExpectedDate)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DevExpress().DateEditFor(m => m.ConfirmDate,
             settings =>
             {
                 settings.Name = "ConfirmDate";
                 settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                 settings.Date = DateTime.Now;
                 settings.ClientVisible = true;

             }
         ).GetHtml()
                @Html.ValidationMessageFor(model => model.ConfirmDate)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Note)
                @Html.ValidationMessageFor(model => model.Note)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AccountID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.AccountID, ViewBag.Accounts as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
            </div>
        </div>


        <div class="form-group" id="dvloan">
            @Html.LabelFor(model => model.LoanID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.LoanID, ViewBag.TenantLoanTypes as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AccountContactId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.AccountContactId, ViewBag.AccountContacts as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Auth User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthUserId", ViewBag.AuthUsers as IEnumerable<SelectListItem>, new { @class = "chosen-select" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.Action("_OrderDetails", "OrderDetail")
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4">
                <input type="button" style="width:60px"
                       id="OrderDetailadd"
                       class="btn btn-primary orddet" value="Add">
                <input type="button" style="width:60px"
                       id="OrderDetailUpdate"
                       class="btn btn-primary orddet" value="Update">
                <input type="button" style="width:60px"
                       id="OrderDetailDelete"
                       class="btn btn-primary orddet" value="Delete">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-11">
                <input type="submit" value="Confirm Order" class="btn btn-default" />
            </div>
        </div>

    </div>
}


