@model Ganedata.Core.Entities.Domain.ProductGroups
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme },
          new StyleSheet { ExtensionType = ExtensionType.UploadControl, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit },
        new Script { ExtensionType = ExtensionType.UploadControl }
        )
}

@{
    ViewBag.Title = "Add New Product Group";
}

<h2><span>Product Groups</span></h2>

<div class="col-md-12 p-0">
    <div class="col-md-6">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true)

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ProductGroup, new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ProductGroup)
                    @Html.ValidationMessageFor(model => model.ProductGroup)
                </div>
            </div>


            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Enter Department", htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.DepartmentId, ViewBag.Departments as SelectList, "Select Department", new { @class = "chosen-select" })
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.Label("Image File", new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.Partial("_Uploader")
                    <br />
                    <div id="dvfiles" style="display: block;">
                        <strong>Uploaded Files</strong>
                        @if (ViewBag.Files != null)
                        {
                            foreach (var file in ViewBag.Files)
                            {
                                <table>
                                    <tr>
                                        <td id="tdfileName">@file</td>
                                        <td>
                                            <p>&nbsp;</p>
                                        </td>
                                        <td><a class="LRemove" onclick="_RemoveProofOfDeliveryFile('@file')">Remove</a></td>
                                        <td>
                                            <p>&nbsp;</p>
                                        </td>

                                    </tr>
                                </table>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                <div class="col-md-offset-2 col-md-10 bottom-right">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
                </div>
            </div>
        </div>
        }

    </div>
</div>
<script id="uploaderProductDepartment" type="text/x-jquery-tmpl">
    <tr>
        <td id="tdProductDepartmentfileName">${FileName}</td>
        <td><p>&nbsp;</p></td>
        <td><a class="LRemove" onclick="_RemoveProductGroupFile('${FileName}')">Remove</a></td>

    </tr>

</script>