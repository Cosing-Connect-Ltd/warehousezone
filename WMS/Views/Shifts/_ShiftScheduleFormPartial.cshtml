@model Ganedata.Core.Entities.Domain.ShiftSchedule
@using System.Web.UI.WebControls

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@using (Html.BeginForm())
{
<table cellpadding="0" cellspacing="0" style="width: 100%; height: 185px; border-top: solid lightgray 1px">
    <tr>
        <td style="padding-right: 5px;">
            @Html.DevExpress().LabelFor(m => m.Subject).GetHtml()
        </td>
        <td colspan="3" style=" padding-right: 5px;">
            @Html.DevExpress().TextBox(
                     settings =>
                     {
                         settings.Name = "Subject";
                         settings.ShowModelErrors = true;
                         settings.Properties.ValidationSettings.Display = Display.Dynamic;
                         settings.Width = Unit.Percentage(100);
                     }).Bind(Model.Subject).GetHtml()
        </td>
    </tr>
    <tr>
        <td style="white-space: nowrap; padding-right: 5px;">
            @Html.DevExpress().LabelFor(m => m.StartTime).GetHtml()
        </td>
        <td style="width: 50%; padding-right: 5px;">
            @Html.DevExpress().DateEdit(
                     settings =>
                     {
                         settings.Name = "StartTime";
                         settings.Properties.UseMaskBehavior = true;
                         settings.Properties.EditFormat = EditFormat.Custom;
                         settings.Properties.EditFormatString = "dd/MM/yyyy HH:mm";
                         settings.Properties.TimeSectionProperties.Visible = true;
                         settings.Properties.TimeSectionProperties.Adaptive = true;
                         settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                         settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                         settings.ShowModelErrors = true;
                         settings.Properties.ValidationSettings.Display = Display.Dynamic;
                         settings.Width = Unit.Percentage(100);
                     }).Bind(Model.StartTime).GetHtml()
        </td>
        <td style="white-space: nowrap; padding-right: 5px;">
            @Html.DevExpress().LabelFor(m => m.EndTime).GetHtml()
        </td>
        <td style="width: 50%; padding-right: 5px;">
            @Html.DevExpress().DateEdit(
                     settings =>
                     {
                         settings.Name = "EndTime";
                         settings.Properties.UseMaskBehavior = true;
                         settings.Properties.EditFormat = EditFormat.Custom;
                         settings.Properties.EditFormatString = "dd/MM/yyyy HH:mm";
                         settings.Properties.TimeSectionProperties.Visible = true;
                         settings.Properties.TimeSectionProperties.Adaptive = true;
                         settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                         settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                         settings.ShowModelErrors = true;
                         settings.Properties.ValidationSettings.Display = Display.Dynamic;
                         settings.Width = Unit.Percentage(100);
                     }).Bind(Model.EndTime).GetHtml()
        </td>
    </tr>

    @if (Model.Type == 0 || Model.Type == 1)
    {
        <tr>
            <td style="white-space: nowrap; padding-right: 5px;">
                @Html.DevExpress().LabelFor(m => m.ResourceId).GetHtml()

            </td>
            <td style="width: 50%; padding-right: 5px;">
                @Html.DevExpress().ComboBox(
                         settings =>
                         {
                             settings.Name = "ResourceId";
                             settings.Properties.ValueType = typeof(Int32);
                             settings.Properties.ValueField = "ResourceId";
                             settings.Properties.TextField = "Name";
                             settings.Width = Unit.Percentage(100);
                         }).BindList(ViewBag.ResourceDataSource).Bind(Model.ResourceId).GetHtml()
            </td>
            <td style="white-space: nowrap; padding-right: 5px;">
                @Html.DevExpress().LabelFor(m => m.TimeBreaks).GetHtml()

            </td>
            <td style="width: 50%; padding-right: 5px;">
                @Html.DevExpress().ComboBox(
                         settings =>
                         {
                             settings.Name = "TimeBreaks";
                             settings.Properties.ValueType = typeof(TimeSpan);
                             settings.Properties.ValueField = "Value";
                             settings.Properties.TextField = "Text";
                             settings.Width = Unit.Percentage(100);
                         }).BindList(ViewBag.TimeBreaksDataSource).Bind(Model.TimeBreaks).GetHtml()
            </td>
        </tr>
    }


    <tr>
        <td colspan="4">
            @Html.DevExpress().Memo(
                     settings =>
                     {
                         settings.Name = "Description";
                         settings.Properties.Rows = 4;
                         settings.ShowModelErrors = true;
                         settings.Properties.ValidationSettings.Display = Display.Dynamic;
                         settings.Width = Unit.Percentage(100);
                     }).Bind(Model.Description).GetHtml()
        </td>
    </tr>
</table>

@Html.DevExpress().AppointmentRecurrenceForm(ViewBag.AppointmentRecurrenceFormSettings).GetHtml()

    <table cellpadding="0" cellspacing="0" style="width: 100%; height: 35px;">
        <tr>
            <td style="width: 100%; height: 100%;" align="center">
                <table style="height: 100%;">
                    <tr>
                        <td>
                            @Html.DevExpress().Button(
                                        settings =>
                                        {
                                            settings.Name = "Apply";
                                            settings.Text = "Ok";
                                            settings.Width = Unit.Pixel(91);
                                            settings.ClientSideEvents.Click = "OnAppointmentFormSave";
                                        }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().Button(
                                        settings =>
                                        {
                                            settings.Name = "Cancel";
                                            settings.Text = "Cancel";
                                            settings.ClientSideEvents.Click = "function(s, e){ scheduler.AppointmentFormCancel(); }";
                                            settings.Width = Unit.Pixel(91);
                                        }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().Button(
                                        settings =>
                                        {
                                            settings.Name = "Delete";
                                            settings.Text = "Delete";
                                            settings.Width = Unit.Pixel(91);
                                            settings.Enabled = ViewBag.DeleteButtonEnabled;
                                            settings.ClientSideEvents.Click = "function(s, e){ scheduler.AppointmentFormDelete(); }";
                                        }).GetHtml()
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <table cellpadding="0" cellspacing="0" style="width: 100%;">
        <tr>
            <td style="width: 100%;" align="left">
                @Html.DevExpress().SchedulerStatusInfo(
                            settings =>
                            {
                                settings.Name = "schedulerStatusInfo";
                                settings.Priority = 1;
                                settings.SchedulerName = "scheduler";
                            }).GetHtml()
            </td>
        </tr>
    </table>
}