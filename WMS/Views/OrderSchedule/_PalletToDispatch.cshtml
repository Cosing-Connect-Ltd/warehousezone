@using Ganedata.Core.Models;
@model IEnumerable<Ganedata.Core.Entities.Domain.PalletsDispatch>
@using Ganedata.Core.Entities.Enums;

<div id="JobTabs">
    <ul>
        <li><a href="#ByTrade">Pallet Dispatch</a></li>

    </ul>
    @ViewBag.title
    <div id="ByTrade">
        <div class="works-jobs" id="JobsByTrade">
            <div id="works-jobs">
                @foreach (var jobType in Model)
                {

                    <div>
                        <ul>

                            <li style="background-color: gray" value="@jobType.OrderProcess.Order.OrderID" class="draggable reallocation-parent"
                                data-orderid="@jobType.OrderProcess.Order.OrderID" data-tid="@jobType.OrderProcess.TenentId" data-dpId="@jobType.PalletsDispatchID">
                                @*<p><a title="Click to view or modify Order" href="@Url.Action("Edit","WorksOrders", new { id= Order.OrderID })">  @Order.OrderNumber</a> : @Math.Round(TimeSpan.FromMinutes(Convert.ToInt64(Order.ExpectedHours)).TotalHours, 2) Hours : @Order.SlaPriorityName</p>*@
                                <p>
                                    <i>
                                        Order No: <b>@jobType.OrderProcess.Order.OrderNumber</b>
                                    </i>
                                </p>
                                <p>
                                    <i>
                                        Account Name: <b>@jobType.OrderProcess.Order.Account.CompanyName</b>
                                    </i>
                                </p>
                                <p>
                                    <i>
                                        Dispatch Ref: <b>@jobType.DispatchReference</b>
                                    </i>
                                </p>
                                <p>Address: <b>@jobType.OrderProcess.ShipmentAddressLine1, @jobType.OrderProcess.ShipmentAddressPostcode</b></p>
                                @if (jobType.OrderProcess.Order.OrderNotes != null && jobType.OrderProcess.Order.OrderNotes.Where(x => x.IsDeleted != true).Count() > 0)
                                {
                                    <textarea title="@(string.Join("\r\n",jobType.OrderProcess.Order.OrderNotes.Where(x => x.IsDeleted != true).Select(m=> m.Notes)))" readonly>  @(string.Join("\r\n", jobType.OrderProcess.Order.OrderNotes.Where(x => x.IsDeleted != true).Select(m=> m.Notes)))</textarea>
                                }

                            </li>

                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>


</div>
