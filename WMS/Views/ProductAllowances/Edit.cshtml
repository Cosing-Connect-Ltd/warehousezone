@model Ganedata.Core.Entities.Domain.ProductAllowance
@using Ganedata.Core.Entities.Enums
@using Ganedata.Core.Entities.Helpers
@{
    ViewBag.Title = "Edit";
}
@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit }
        )
}
<h2><span>Edit Product Allowance (@ViewBag.SiteName)</span></h2>
@Html.Hidden("ProductAllowance", true)
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.SiteID)
    <div class="col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.RolesId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("RolesId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RolesId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.PerXDays, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PerXDays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PerXDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Select Product", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.Partial("ProductLargeDataComboBoxPartial")
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.LabelFor(model => model.AllowanceGroupId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("AllowanceGroupId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AllowanceGroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Reason", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextArea("Reason", htmlAttributes: new { @class = "form-control" })

            </div>
        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        <div class="col-md-offset-2 col-md-10 bottom-right">
            <input type="submit" class="btn btn-primary" value="Save" />
            <div class="back-list">@Html.ActionLink("Back to List", "Index", new { SiteId =Model.SiteID }, new { @class = "btn btn-default" })</div>
        </div>
    </div>
}
