@model Ganedata.Core.Entities.Domain.StockMovementViewModel
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme },
           new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.PopupControl, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit },
         new Script { ExtensionType = ExtensionType.GridView },
        new Script { ExtensionType = ExtensionType.PopupControl }
        )
}

@{
    ViewBag.Title = "MoveStock";
}

<h2><span>Move Stock @(Model != null ? (Model.ProductId.ToString()):"")</span></h2>

@using (Html.BeginForm("MoveStock", "InventoryStocks",FormMethod.Post, new { @class = "stockMovement" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ProductId)
    @*@Html.HiddenFor(m => m.Product.Serialisable)*@
    <div class="col-md-12 p-0">
        <div class="col-md-6 p-0 pull-left">
            @Html.ValidationSummary(true)
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.FromLocation, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.FromLocation, ViewBag.FromLocations as SelectList, new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.FromLocation)
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ToLocation, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.ToLocation, ViewBag.ToLocations as SelectList, new { @class = "chosen-select" })
                    @Html.ValidationMessageFor(model => model.ToLocation)
                </div>
            </div>
            @if (Model == null || Model.ProductId <= 0)
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "col-md-4" })
                    <div class="col-md-8">

                        @Html.Partial("ProductLargeDataComboBoxPartial")

                    </div>
                </div>
            }
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.DevExpress().SpinEditFor(m => m.Qty,
         settings =>
         {
             settings.Name = "Qty";
             settings.Properties.MinValue = 0;
             settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
             settings.ControlStyle.CssClass = "form-control";
         }
     ).GetHtml()
                    @Html.ValidationMessageFor(model => model.Qty)
                </div>
            </div>
            @if (Model == null || Model.ProductId <= 0)
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    <div class="col-md-4 height-0"> </div>
                    <div class="col-md-8 pull-left mb-20">
                        <input type="button" class="btn btn-primary pull-right" onclick="OnStockMovementAdjust()" value="Adjust" />
                    </div>
                </div>
            }
        </div>
        @if (Model == null || Model.ProductId <= 0)
        {
            @Html.Hidden("BulkStock",true)
            <div class="col-md-6 p-0 pull-left">
                <div class="goods-returned-list">
                    @Html.Action("_StockMovementList")
                </div>
            </div>
        }
        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-8 bottom-right">
                <input type="submit" value="Submit" class="btn btn-primary  " />
                <div class="back-list"> @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })</div>
            </div>
        </div>
    </div>

}