@model Ganedata.Core.Entities.Domain.WebsiteLayoutSettings
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
         new StyleSheet { ExtensionType = ExtensionType.UploadControl, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
          new Script { ExtensionType = ExtensionType.UploadControl }
        )
}

@{
    ViewBag.Title = "Newsletter Subscription Settings";
}

<h2><span>@ViewBag.Title (@ViewBag.SiteName)</span></h2>
@Html.Hidden("tenantWebsite", true)
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SiteId)
    @Html.HiddenFor(model => model.Id)
    @Html.Hidden("hdPFiles", (List<string>)ViewBag.Files)

    <div class="col-md-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6 p-0 pull-left mb-2">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.SubscriptionPanelTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SubscriptionPanelTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubscriptionPanelTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.SubscriptionPanelDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.SubscriptionPanelDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubscriptionPanelDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.SubscriptionHandlerUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SubscriptionHandlerUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubscriptionHandlerUrl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6 p-0 pull-left mb-2">
            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.ShowSubscriptionPanel, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ShowSubscriptionPanel)
                        @Html.ValidationMessageFor(model => model.ShowSubscriptionPanel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="input-group h-100 justify-content-center align-items-center">
                @Html.LabelFor(model => model.SubscriptionPanelImageUrl, new { @class = "col-md-4" })
                <div class="col-md-8">
                    @Html.Action("_FileUploader", new { name = "SubscriptionPanelImage", filePath = Model.SubscriptionPanelImageUrl })
                </div>
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <div class="col-md-offset-2 col-md-10 bottom-right">
                <input type="submit" value="Save" class="btn btn-primary" />
                <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
            </div>
        </div>
    </div>
}

