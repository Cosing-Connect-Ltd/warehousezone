
@using Ganedata.Core.Entities.Helpers
@model Ganedata.Core.Entities.Domain.LabelPrintViewModel

@section scripts {
    @Html.DevExpress().GetStyleSheets(
            new StyleSheet { ExtensionType = ExtensionType.PopupControl, Theme = GaneStaticAppExtensions.DevexTheme },
            new StyleSheet { ExtensionType = ExtensionType.PopupMenu, Theme = GaneStaticAppExtensions.DevexTheme }
            )

    @Html.DevExpress().GetScripts(
            new Script { ExtensionType = ExtensionType.PopupControl },
            new Script { ExtensionType = ExtensionType.PopupMenu }
            )
}
@{
    Layout = null;
}
<h2><span>Print Pallets Labels</span></h2>
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmLabelPrint" }))
{
    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.OrderDetailId)
    @Html.HiddenFor(m => m.ProductName)
    @Html.HiddenFor(m => m.ProductBarcode)
    @Html.HiddenFor(m => m.ProductSkuCode)
    @Html.HiddenFor(m => m.OrderNumber)
    @Html.HiddenFor(m => m.RequiresExpiryDate)
    @Html.HiddenFor(m => m.RequiresBatchNumber)

    <div class="clearfix"></div>

    <h3>@Model.ProductName</h3>
    <br />

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("No Of Labels: ", htmlAttributes: new { @class = "col-md-4 required-asterisk" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.LabelsCount, new { htmlAttributes = new { @type = "number", @min = "1", @Value = "1" } })
        </div>
    </div>
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("No Of Pallets: ", htmlAttributes: new { @class = "col-md-4 required-asterisk" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.PalletsCount, new { htmlAttributes = new { @type = "number", @min = "1", @required = "required" } })
        </div>
    </div>

    if (Model.RequiresExpiryDate == true)
    {
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Expiry Date: ", htmlAttributes: new { @class = "col-md-4 required-asterisk" })
            <div class="col-md-8">
                @Html.DevExpress().DateEditFor(m => m.LabelDate,
                          settings =>
                          {
                              settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                              settings.ClientVisible = true;
                              settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                              settings.ControlStyle.CssClass = "form-control required";
                              settings.Properties.MinDate = DateTime.Today;
                              settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                          }
                          ).GetHtml()
            </div>
        </div>
    }
    else
    {
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Date: ", htmlAttributes: new { @class = "col-md-4 required-asterisk" })
            <div class="col-md-8">
                @Html.DevExpress().DateEditFor(m => m.LabelDate,
                         settings =>
                         {
                             settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                             settings.ClientVisible = true;
                             settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                             settings.ControlStyle.CssClass = "form-control required";
                             settings.Properties.MinDate = DateTime.Today;
                             settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                         }
                         ).GetHtml()
            </div>
        </div>
    }

    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Cases: ", htmlAttributes: new { @class = "col-md-4 required-asterisk" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Cases, new { htmlAttributes = new { @type = "number", @min = "1", @required = "required" } })
        </div>
    </div>
    if (Model.RequiresBatchNumber == true)
    {
        <div class="input-group h-100 justify-content-center align-items-center">
            @Html.Label("Batch No: ", htmlAttributes: new { @class = "col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(m => m.BatchNumber, new { @class = "form-control" })
            </div>
        </div>
    }
    <div class="input-group h-100 justify-content-center align-items-center">
        @Html.Label("Comments: ", htmlAttributes: new { @class = "col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Comments, new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-offset-2 col-md-12 bottom-right-popup">
        <input type="button" value="Preview and Print" class="btn btn-primary btn-submit pull-right" onclick="showPalletLabelPreview();" />
        @*<input type="button" value="Print" class="btn btn-primary btn-submit120px pull-right" onclick="printPalletLabel();" />*@
        <input type="button" value="Cancel" class="btn btn-default btn-submit120px pull-right" onclick="ProductLabelPrintPopup.Hide();" />
    </div>
}
