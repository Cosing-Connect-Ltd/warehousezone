@model IEnumerable<Ganedata.Core.Entities.Domain.ProductCategory>
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

@{
    ViewBag.Title = "Product Categories";
}

<h2><span>Product Categories</span></h2>

<script type="text/javascript">
    function OnGridFocusedRowChanged(s, e) {
        $('.selkey').val(s.GetRowKey(s.GetFocusedRowIndex()));
    }
</script>

@Html.Hidden("selkey", null, new { @class = "selkey" })

@Html.Action("_ProductCategoriesList")

<div class="col-md-12 p-0">

    @if (WMS.Helpers.LayoutHelpers.ActivityValidator("ProductCategories", "Create"))
    {
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary  " })
    }

    @if (WMS.Helpers.LayoutHelpers.ActivityValidator("ProductCategories", "Edit"))
    {
        @Html.ActionLink("Update", "Edit", null, new { @class = "btn btn-primary  Caction" })
    }


    @if (WMS.Helpers.LayoutHelpers.ActivityValidator("ProductCategories", "Delete"))
    {
        @Html.ActionLink("Delete", "Delete", null, new { @class = "btn btn-primary  Caction" })
    }


</div>
    @*<p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductGroups.ProductGroup)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductCategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SortOrder)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductGroups.ProductGroup)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SortOrder)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ProductCategoryId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ProductCategoryId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ProductCategoryId })
                    </td>
                </tr>
            }*@
