@using Ganedata.Core.Entities.Helpers

@{
    ViewBag.Title = "Currency Exchange Rate";
}

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.GridView, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.GridView }
        )
}

<h2><span>Currencies Exchange Rate</span></h2>
<script type="text/javascript">
    function OnGridFocusedRowChanged(s, e) {
        $('.selkey').val(s.GetRowKey(s.GetFocusedRowIndex()));
    }
</script>

@Html.Hidden("selkey", null, new { @class = "selkey" })

<div class="col-md-3 p-0 View float-left">
    @Html.Action("LatestCurrencyExRateData")
</div>
<div class="col-md-9 p-0 View float-left">
    @Html.Action("CurrencyExList")
</div>

@*<div class="col-md-12 p-0 bottom-right">
        @if (WMS.Helpers.LayoutHelpers.ActivityValidator("CurrencyExRate", "Create"))
        {
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary  " })
        }
        @if (WMS.Helpers.LayoutHelpers.ActivityValidator("CurrencyExRate", "Details"))
        {
            @Html.ActionLink("View", "Details", null, new { @class = "btn btn-primary Caction" })
        }
        @if (WMS.Helpers.LayoutHelpers.ActivityValidator("CurrencyExRate", "Edit"))
        {
            @Html.ActionLink("Update", "Edit", null, new { @class = "btn btn-primary Caction" })
        }
        @if (WMS.Helpers.LayoutHelpers.ActivityValidator("CurrencyExRate", "Delete"))
        {
            @Html.ActionLink("Delete", "Delete", null, new { @class = "btn btn-primary Caction" })
        }
    </div>*@
