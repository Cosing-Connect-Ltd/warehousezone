@model Ganedata.Core.Entities.Domain.ProductAttributeValuesMap
<hgroup>
    @*<h2><span>@(Model == null || Model.ProductAttributeValues.AttributeId == 0 ? "Assign New " : "Edit ") Attribute Price</span></h2>*@
    <h3><span>@Html.ValidationSummary("", new { @id = "vldAttributeValue" })</span></h3>
</hgroup>
@using (Html.BeginForm("SaveProductAttributeValueMap", "Products", FormMethod.Post, new { @id = "frmProductAttribute" }))
{
    if (ViewBag.PriceGroupId != null)
    {
        @Html.Hidden("PriceGroupID", ((int) ViewBag.PriceGroupId).ToString())
    }
    if (ViewBag.PriceGroupName != null)
    {
        <div class="alert alert-info text-center">
            <div class="col">
                Selected Price Group <h4> @ViewBag.PriceGroupName </h4>
            </div>
            <div class="col">  Selected Product <h4> @ViewBag.ProductName </h4></div>
            <div id="AttributePriceGroupMessage" style="display: none;position: absolute;right: 5px;top: 30%;background-color: #9a382b;color: white;padding: 5px 8px;">Information Saved</div>
        </div>
    }
    <div class="col-md-12">
        @if (Model == null || Model.ProductAttributeValues.AttributeId == 0)
        {
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class="col-md-4">Product Attribute</label>
                <div class="col-md-8">
                    <div class="col-11 p-0 mt-1 pull-left">
                        @Html.DropDownListFor(m => m.ProductAttributeValues.AttributeId, new SelectList(ViewBag.Attributes, "AttributeId", "AttributeName"), new { id = "drpattribute", @class = "chosen-select", onchange = "AttributeChange()" })
                    </div>
                    <div class="col-1 p-0 pull-left">
                        <input type="button" onclick="javascript: pcModalAttributes.Show();" id="ProdAttributeAdd" class="btn btn-primary" value="+">
                    </div>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.ProductAttributeValues.AttributeId)
            @Html.Hidden("productAttributeValueMapId", (ViewBag.ProductAttributeValuesMapId as int?) ?? 0)
        }
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class="col-md-4">Attribute Value<span style="color:red"> *</span></label>
            <div class="col-md-8">
                <div class="col-11 p-0 mt-1 pull-left">

                    @Html.DropDownListFor(m => m.AttributeValueId, new SelectList(ViewBag.AttributeValues, "AttributeValueId", "Value"), new { @class = "chosen-select drpAttrValue" })
                    @Html.ValidationMessageFor(model => model.AttributeValueId)
                </div>
                <div class="col-1 p-0 pull-left">
                    <input type="button" onclick="javascript: pcModalAttributeValues.Show();" id="ProdAttributeValueAdd" class="btn btn-primary" value="+">
                </div>
            </div>
        </div>
        <div class="input-group h-100 justify-content-center align-items-center">
            <label class="col-md-4">Attribute Specific Price<span style="color:red"> *</span></label>
            <div class="col-md-4">
                <div class="col-12 p-0 mt-1">
                    @Html.DevExpress().SpinEdit(m =>
                    {
                        m.Name = "spnAttributeSpecificPrice";
                        m.Properties.DecimalPlaces = 2;
                        m.ControlStyle.CssClass = "form-control";
                    }).GetHtml()
                    @*@Html.TextBox("AttributeSpecificPrice", "", new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.AttributeValueId)
                </div>
                <div class="col-1 p-0 pull-left">
                  
                </div>
            </div>
            <div class="col-md-4 text-right">
                <input type="button" onclick="PostProductAttributeValue()" value="Submit" class="btn btn-primary" />
                <input type="button" onclick="CancelPostProductAttributeValue()" value="Cancel" class="btn btn-default" />
            </div>
        </div>
    </div>

 
    <div class="col-md-12">
        @*<div class="col-11 p-0 mt-1 pull-left">
                            @Html.ListBox("ProductAttributesIds", new MultiSelectList(ViewBag.Attributes, "Id", "Value", "Attribute"), new { @include_group_label_in_selected = "true", @class = "chosen-select", Multiple = "multiple", size = "5", data_placeholder = "Choose Attributes" })
                        </div>*@
        @Html.Action("_ProductAttributesSelection", "Products", new { id = ViewBag.ProductId, priceGroupId = ViewBag.PriceGroupId })

    </div>
}