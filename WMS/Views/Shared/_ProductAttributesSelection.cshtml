@model Ganedata.Core.Entities.Domain.ProductMaster 

    @{
            var grid = Html.DevExpress().GridView(settings =>
            {
            settings.Name = "ProductAttributeSelection";
            settings.CallbackRouteValues = ViewBag.routeValues;
            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            settings.Settings.ShowHeaderFilterButton = true;
            settings.SettingsPopup.HeaderFilter.Height = 200;
            settings.SettingsPopup.HeaderFilter.MinWidth = 500;

            settings.Settings.ShowFilterBar = GridViewStatusBarMode.Hidden;
            settings.SettingsPager.PageSize = 10;
            settings.KeyFieldName = "ProductId";
            settings.SettingsPager.Visible = false;
            settings.Settings.ShowGroupPanel = false;
            settings.Settings.ShowFilterRow = false;
            settings.SettingsBehavior.AllowFocusedRow = true;

            settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
            settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
            settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
            settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
            settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

            settings.Columns.Add(c =>
            {
                c.Caption = "Type";
                c.FieldName = "AttributeName";
            });
            settings.Columns.Add(c =>
            {
                c.Caption = "Name";
                c.FieldName = "AttributeValueName";
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "AttributeSpecificPrice";
                c.Caption = "Price";
                c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            });
                if (Request.Url.AbsoluteUri.Contains("_ProductAttributePriceCreateEdit")||Request.Url.AbsoluteUri.Contains("_ProductAttributesSelection"))
                {
                    settings.Columns.Add().SetDataItemTemplateContent(m =>
                    {
                        var mapId = DataBinder.Eval(m.DataItem, "ProductSpecialAttributePriceId").ToString();
                        ViewContext.Writer.Write("<div style='cursor:pointer' data-mapId='" + mapId + "' onclick='javascript:DeleteProductAttributeMap(this);'><i class='fa fa-trash'></i></div>");
                    });
                }
                
                settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
            settings.SettingsPager.PageSizeItemSettings.Visible = false;
            //settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
            //settings.SettingsDetail.ShowDetailRow = true;
            //settings.SetDetailRowTemplateContent(c =>
            //{
            //    Html.DevExpress().PageControl(s =>
            //    {
            //        s.EnableTabScrolling = true;
            //        s.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            //        s.Name = DataBinder.Eval(c.DataItem, "LocationId").ToString();
            //        s.TabPages.Add("Products").SetContent(() =>
            //        {
            //            Html.RenderAction("_Products", new { LocationId = DataBinder.Eval(c.DataItem, "LocationId") });
            //        });

            //    }).GetHtml();
            //});

        });
}
@grid.Bind(ViewBag.ProductAttributeLinks).GetHtml()