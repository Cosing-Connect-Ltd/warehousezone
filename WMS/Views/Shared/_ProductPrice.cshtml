
@model Ganedata.Core.Entities.Domain.ProductPrices
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Product Price</title>
</head>
<body>
    <hgroup>
        <h2><span>Product Price</span></h2>
        <h3><span>@Html.ValidationSummary("", new { @id = "vldProductPrice" })</span></h3>
    </hgroup>
    @using (Html.BeginForm("SaveProductPrice", "Products", FormMethod.Post, new { @id = "frmProductPrice" }))
    {
        @Html.HiddenFor(m => m.PriceID)

        <div class="leftcol">

            <div class="form-group">
                <label class="control-label col-md-2">Product Price<span style="color:red"> *</span></label>
                <div class="col-md-10">
                    @Html.DevExpress().SpinEditFor(m => m.Price,
                settings =>
                {
                    settings.Name = "Price";
                    settings.Properties.MinValue = 1;
                    settings.Properties.MaxValue = 1000000;
                    settings.Properties.NullText = "Enter Price...";

                }
            ).GetHtml()

                    @Html.ValidationMessageFor(model => model.Price)
                </div>

            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Effect Start Date<span style="color:red"> *</span></label>
                <div class="col-md-10">
                    @Html.DevExpress().DateEditFor(m => m.DateStartEffect,
                settings =>
                {
                    settings.Name = "DateStartEffect";
                    settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                    settings.Date = DateTime.Now;
                    //settings.Date=new DateTime(1984, 06, 14);

                }
            ).GetHtml()


                    @Html.ValidationMessageFor(model => model.Price)
                </div>

            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Effect End Date<span style="color:red"> *</span></label>
                <div class="col-md-10">
                    @Html.DevExpress().DateEditFor(m => m.DateEndEffect,
                settings =>
                {
                    settings.Name = "DateEndEffect";
                    settings.Properties.DisplayFormatString = "dd/MM/yyyy";


                }
            ).GetHtml()


                    @Html.ValidationMessageFor(model => model.Price)
                </div>

            </div>

            <div class="form-group">
                @if (!Request.Url.AbsolutePath.Contains("SaveProductPrice"))
                {


                    <div class="col-md-8">
                        <input type="button" onclick="productPriceSave()" value="Save" class="btn btn-default" />
                        <input type="button" onclick="javascript: pcModalproductprice.Hide();" value="Cancel" class="btn btn-default" />


                    </div>
                }
                else
                {

                    <div class="col-md-8">
                        <input type="submit" value="Save" class="btn btn-default" />
                        <div class="btn btn-default"> @Html.ActionLink("Cancel", "Edit", new { @id = Session["pId"] })</div>
                    </div>

                }

            </div>

        </div>
    }
</body>
</html>