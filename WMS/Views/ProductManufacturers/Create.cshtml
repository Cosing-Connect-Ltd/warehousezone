@model Ganedata.Core.Entities.Domain.ProductManufacturer
@using Ganedata.Core.Entities.Helpers

@section scripts {

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.SpinEdit, Theme = GaneStaticAppExtensions.DevexTheme },
        new StyleSheet { ExtensionType = ExtensionType.DateEdit, Theme = GaneStaticAppExtensions.DevexTheme },
         new StyleSheet { ExtensionType = ExtensionType.UploadControl, Theme = GaneStaticAppExtensions.DevexTheme }
        )

    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.SpinEdit },
        new Script { ExtensionType = ExtensionType.DateEdit },
          new Script { ExtensionType = ExtensionType.UploadControl }
        )
}

@{
    ViewBag.Title = "Add New Product Manufacturer";
}
<script type="text/javascript">
    function onFileUploadComplete(s, e) {
        debugger;
        if (e.callbackData) {
            debugger;
            $("#dvfiles").show();
            var fileData = e.callbackData.split('|');
            var Fileobj = { FileName: fileData };
            var result = $("#uploaderTenantDept").tmpl(Fileobj);
            $("#dvfiles").append(result);
            $('.se-pre-con').hide();
            $("#FileLength").val('True');

        }


    }
    function onFileUploadStart(s, e) {
        if ($("#FileLength").val() == 'True') {
            e.cancel = true;
            alert("Only one file allow to be select");
            return;
        }
    }
</script>

<h2><span>Product Manufacturer</span></h2>
@Html.Hidden("ProductManufacturer", true)
<div class="col-md-12 p-0">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="input-group h-100 justify-content-center align-items-center">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="input-group h-100 justify-content-center align-items-center">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-group h-100 justify-content-center align-items-center">
                    @Html.Label("Image File", new { @class = "col-md-4" })
                    <div class="col-md-8">
                        @Html.Partial("_Uploader")
                        <br />
                        <div id="dvfiles">
                            @Html.Hidden("FileLength", (bool?)ViewBag.FileLength)
                            <strong>Uploaded Files</strong>
                        </div>
                    </div>
                </div>
                <div class="input-group h-100 justify-content-center align-items-center">
                    <div class="col-md-offset-2 col-md-10 bottom-right">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        <div class="back-list">@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })</div>
                    </div>
                </div>
            </div>
        }


    </div>
</div>
<script id="uploaderTenantDept" type="text/x-jquery-tmpl">
    <tr>
        <td id="tdfileName">${FileName}</td>
        <td><p>&nbsp;</p></td>
        <td><a class="LRemove" onclick="_RemoveProofOfDeliveryFile('${FileName}')">Remove</a></td>

    </tr>
</script>