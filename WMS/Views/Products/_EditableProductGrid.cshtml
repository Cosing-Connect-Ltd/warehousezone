@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "ProductEditListGridView";
        settings.CallbackRouteValues = new { Controller = "Products", Action = "_EditableProductGrid" };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.DblClick;
        settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
        settings.CustomBindingRouteValuesCollection.Add(
            GridViewOperationType.Paging,
            new { Controller = "Products", Action = "_ProductEditListPaging" }
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Filtering,
        new { Controller = "Products", Action = "_ProductsEditFiltering" }
        );

        settings.CustomBindingRouteValuesCollection.Add(
        GridViewOperationType.Sorting,
        new { Controller = "Products", Action = "_ProductsEditGetDataSorting" }
        );

        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
        settings.KeyFieldName = "ProductId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = false;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.FieldName = "Name";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "SKUCode";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Serialisable";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            (c.PropertiesEdit as CheckBoxProperties).DisplayTextChecked = "True";
            (c.PropertiesEdit as CheckBoxProperties).DisplayTextUnchecked = "False";
            c.EditorProperties().CheckBox(p =>
            {
                p.ClientSideEvents.LostFocus = "function(s,e){ OnDetailsChanged(s,e);}";
            });
            c.EditFormSettings.Visible = DefaultBoolean.True;


        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "ProcessByPallet";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            (c.PropertiesEdit as CheckBoxProperties).DisplayTextChecked = "True";
            (c.PropertiesEdit as CheckBoxProperties).DisplayTextUnchecked = "False";
            c.EditFormSettings.Visible = DefaultBoolean.True;

        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "InStock";
            c.ColumnType = MVCxGridViewColumnType.SpinEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });


        settings.ClientSideEvents.BeginCallback = "function(s,e){ OnBeginGridCallback(s, e); }";
        settings.ClientSideEvents.FocusedCellChanging = "OnSpecialPricesGridFocusChanged";
        settings.ClientSideEvents.EndCallback = "OnEndGridCallback";

        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };


    });

}

@grid.BindToCustomData(Model).GetHtml()
