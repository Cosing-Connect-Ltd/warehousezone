@model Ganedata.Core.Entities.Domain.ProductKitMap
@using Ganedata.Core.Entities.Enums
<hgroup>
    @if (ViewBag.grouped == true)
    {
        <h2><span>Product Group</span></h2>
    }
    else
    {
        <h2><span>@((ViewBag.kitType == null || ViewBag.kitType == 1) ? "Product Kits" : "Product Recipes")</span></h2>
    }
    <h3><span>@Html.ValidationSummary("", new { @id = "vldPrProductKit" })</span></h3>
</hgroup>
@if (Model == null)
{
    using (Html.BeginForm("AddProductKitItemsWithQuantity", "Products", FormMethod.Post, new { @id = "frmproductKit" }))
    {
        @Html.HiddenFor(m => m.Id)
        <div class="col-md-12 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class="col-md-4">Product</label>
                <div class="col-md-8">

                    @Html.Partial("ProductLargeDataComboBoxPartial")

                </div>
            </div>
            @if (ViewBag.grouped == false)
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    <label class="col-md-4">Quantity<span style="color:red"> *</span></label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Quantity)
                        @Html.ValidationMessageFor(model => model.Quantity)
                    </div>
                </div>
            }
            else
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    <label class="col-md-4">Product Kit Type<span style="color:red"> *</span></label>
                    <div class="col-md-8">
                        @Html.DropDownList("ProductKitTypeId", ViewBag.groupedtype as SelectList, "Select Product Kit", new { @class = "chosen-select" })

                    </div>
                </div>

            }
        </div>
        <div class="col-md-offset-2 col-md-10 bottom-right-popup">
            @if (ViewBag.kitType == null)
            {
                <input type="button" onclick="@(ViewBag.grouped==true?"AddKitGroup()":"AddKitProduct()")" value="Save" class="btn btn-primary" />
            }
            else
            {
                var Status = ViewBag.kitType == null ? "false" : "true";
                <input type="button" onclick="AddKitProduct(@ViewBag.kitType,@Status)" value="Save" class="btn btn-primary" />
            }
            <input type="button" onclick="pcModalKitProduct.Hide()" value="Cancel" class="btn btn-default" />
        </div>


    }
}
else
{
    using (Html.BeginForm("", "", FormMethod.Post, new { @id = "frmEditproductKit" }))
    {
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ProductKitType)
        @Html.HiddenFor(model => model.ProductId, new { @class = "parentProductId" })
        <div class="col-md-12 pull-left">
            <div class="input-group h-100 justify-content-center align-items-center">
                <label class="col-md-4">Product</label>
                <div class="col-md-8">

                    @Html.Partial("ProductLargeDataComboBoxPartial")

                </div>
            </div>
            @if (ViewBag.grouped == false)
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    <label class="col-md-4">Quantity<span style="color:red"> *</span></label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Quantity)
                        @Html.ValidationMessageFor(model => model.Quantity)
                    </div>
                </div>
            }
            else
            {
                <div class="input-group h-100 justify-content-center align-items-center">
                    <label class="col-md-4">Product Kit Type<span style="color:red"> *</span></label>
                    <div class="col-md-8">
                        @Html.DropDownList("ProductKitTypeId", ViewBag.groupedtype as SelectList, "Select Product Kit", new { @class = "chosen-select" })

                    </div>
                </div>

            }
        </div>
        <div class="col-md-offset-2 col-md-10 bottom-right-popup">

            <input type="button" onclick="EditKitProductView()" value="Save" class="btn btn-primary" />

            <input type="button" onclick="pcModalKitProduct.Hide()" value="Cancel" class="btn btn-default" />
        </div>


    }

}
