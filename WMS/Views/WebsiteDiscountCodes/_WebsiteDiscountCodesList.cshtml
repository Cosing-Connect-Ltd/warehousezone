@using Ganedata.Core.Entities.Helpers
@using Ganedata.Core.Entities.Enums
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "WebsiteDiscountCodesGridView";
        settings.CallbackRouteValues = new { Controller = "WebsiteDiscountCodes", Action = "_WebsiteDiscountCodesList",SiteId= ViewBag.SiteId };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.Settings.ShowHeaderFilterButton = false;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.Columns.Add("TenantWebsites.SiteName").Caption = "Site Name";
        settings.Columns.Add("Code");
        settings.Columns.Add(c =>
        {
            c.FieldName = "FromDate";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "ToDate";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "DiscountType";
            c.Caption = "Discount Type";
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            c.ColumnType = MVCxGridViewColumnType.ComboBox;
            var comboSettings = (ComboBoxProperties)c.PropertiesEdit;
            comboSettings.DataSource = Enum.GetValues(typeof(WebsiteDiscountTypeEnum));
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "DiscountPercent";
            c.ColumnType = MVCxGridViewColumnType.SpinEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "FreeShippig";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;


        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "SingleUse";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;


        });

        settings.ClientSideEvents.FocusedRowChanged = "OnGridFocusedRowChanged";
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

    });
}
@grid.Bind(Model).GetHtml()

