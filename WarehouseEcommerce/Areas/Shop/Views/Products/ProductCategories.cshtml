@using Ganedata.Core.Entities.Domain
@using Ganedata.Core.Entities.Enums
@model PagedList.IPagedList<ProductMaster>
@using PagedList.Mvc;
@{
    ViewBag.Title = "ProductCategories";
    IEnumerable<ProductManufacturer> data = null;
    if (ViewBag.Manufacturer != null)
    {
        data = ViewBag.Manufacturer as IEnumerable<ProductManufacturer>;
    }
    var UrlQuery = Request.Url.Query;
    string values = "";
    if (UrlQuery.Contains("values="))
    {
        var startindex = UrlQuery.IndexOf("values=");
        var lastindex = UrlQuery.Length - startindex;
        values = UrlQuery.Substring(startindex, lastindex).Replace("values=", "");
    }
}



<div id="product-search" class="container custom-max-width">
    <div class="row">
        @Html.Hidden("valuesParameter", (string)values)
        <div class="col-md-3 col-sm-12">
            <div class="filters cat-filter">
                <h2>Refined by</h2>
                <button type="button" class="btn filterCollapse" data-toggle="collapse" data-target="#accordion">
                    Refined by
                    <span class="glyphicon glyphicon-menu-down"></span>
                </button>
                <div class="" id="accordion">
                    <div class="accordion-option">
                        <a href="javascript:void(0)" class="toggle-accordion active" accordion-id="#accordion"></a>
                    </div>
                    <div class="clearfix"></div>
                    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingOne">
                                <h4 class="panel-title">
                                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        In stock
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                                <div class="panel-body">
                                    <ul class="">
                                        <li class="list-group-item cat-stock"><input type="checkbox" id="stockS" class="checkbox-inline" value="In_stock" @(Request.Url.Query.ToLower().Contains("in_stock") ? "checked" : "")>In stock </li>
                                        <li class="list-group-item cat-stock"><input type="checkbox" id="stockS" class="checkbox-inline" value="Out_stock" @(Request.Url.Query.ToLower().Contains("out_stock") ? "checked" : "")>Out of stock</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingTwo">
                                <h4 class="panel-title">
                                    <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                                        Price
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseTwo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingTwo">
                                <div class="panel-body">
                                    <ul class="">
                                        <li class="list-group-item cat-stock"><input type="checkbox" id="priceS" value="5_25" @(Request.Url.Query.ToLower().Contains("5_25") ? "checked" : "")> £5 - £25.00</li>
                                        <li class="list-group-item cat-stock"><input type="checkbox" id="priceS" value="25_50" @(Request.Url.Query.ToLower().Contains("25_50") ? "checked" : "")> £25.00 - £50.00</li>
                                        <li class="list-group-item cat-stock"><input type="checkbox" id="priceS" value="50_100" @(Request.Url.Query.ToLower().Contains("50_100") ? "checked" : "")> £50.00 - £100.00</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingThree">
                                <h4 class="panel-title">
                                    <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                                        Brand
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseThree" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingThree">
                                <div class="panel-body">
                                    <ul class="">
                                        @if (data != null)
                                        {
                                            foreach (var item in data)
                                            {
                                                string name = item.Name.Replace(" ", "_");
                                                <li class="list-group-item"><input type="checkbox" id="BrandS" class="checkbox-inline" value="@(item.Name.Replace(" ", "_"))" @(Request.Url.Query.ToLower().Contains(name.ToLower()) ? "checked" : "")>@(item?.Name)</li>
                                            }
                                        }







                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div id="content" class="col-md-9 col-sm-12">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <ul class="breadcrumb">
                        <li><a href="/shop">Home</a></li>
                        @if (!string.IsNullOrEmpty(item?.TenantDepartment?.DepartmentName))
                        {
                            <li><a href="@Url.Action("ProductCategories", "Products", new { department = @item.TenantDepartment.DepartmentName})">@(!string.IsNullOrEmpty(item?.TenantDepartment?.DepartmentName) ? item.TenantDepartment.DepartmentName : "")</a></li>
                        }
                        @if (Url.Action() != Url.Action("ProductCategories", "Products", new { department = @item.TenantDepartment.DepartmentName }))
                        {
                            if (!string.IsNullOrEmpty(item?.ProductGroup?.ProductGroup))
                            {
                                <li><a href="@Url.Action("ProductCategories", "Products", new { productGroup = @item.ProductGroup.ProductGroup})">@(!string.IsNullOrEmpty(item?.ProductGroup?.ProductGroup) ? item.ProductGroup.ProductGroup : "")</a></li>
                            }
                        }
                        @if (Url.Action() != Url.Action("ProductDetails", "Products", new { productId = @item.ProductId }))
                        {
                            if (!string.IsNullOrEmpty(item?.ProductCategory?.ProductCategoryName))
                            {
                                <li><a href="@Url.Action("ProductDetails", "Products", new { productId = @item.ProductId })">@(!string.IsNullOrEmpty(item?.ProductCategory?.ProductCategoryName) ? item.ProductCategory.ProductCategoryName : "")</a></li>
                            }
                        }


                    </ul>
                    break;
                }
            }
            <div class="row cate-border">
                <div class="col-md-2 col-sm-3 col-xs-5">
                    <div class="btn-group-sm">
                        <button type="button" id="list-view" class="btn listgridbtn" data-toggle="tooltip" title="List">
                            <svg width="20px" height="20px">
                                <use xlink:href="/Areas/Shop/Content/app/img/icons/icons.svg#clist"></use>
                            </svg>
                        </button>
                        <button type="button" id="grid-view" class="btn listgridbtn" data-toggle="tooltip" title="Grid">
                            <svg width="20px" height="20px">
                                <use xlink:href="/Areas/Shop/Content/app/img/icons/icons.svg#cgrid"></use>
                            </svg>
                        </button>
                    </div>
                </div>
                <input type="text" id="currentsortedvalue" value="@(ViewBag.CurrentSort ?? "")" style="display:none" />
                <input type="text" id="currentFiltervalue" value="@(ViewBag.CurrentFilter ?? "")" style="display:none" />
                <input type="text" id="searchString" value="@(ViewBag.searchString ?? "")" style="display:none" />

                <div class="col-lg-4 col-md-5 col-xs-4 col-sm-5 catesort">
                    <div class="input-group input-group-sm select-input">
                        <label class="input-group-addon" for="input-sort">Sort By:</label>
                        <input type="text" id="pagenumber" value="@Model.PageNumber" style="display:none" />
                        @Html.DropDownList("SortedValues", EnumHelper.GetSelectList(typeof(SortProductTypeEnum)), htmlAttributes: new { @class = "form-control", onchange = "searchPoducts();" })

                    </div>
                </div>
                <div class="col-lg-3 col-md-5 col-xs-3 col-sm-4 catesort">
                    <div class="input-group input-group-sm select-input">
                        <label class="input-group-addon" for="input-limit">Show:</label>
                        @Html.DropDownList("input-limit", ViewBag.pageList as SelectList, htmlAttributes: new { @class = "form-control", onchange = "searchPoducts();" })

                    </div>
                </div>


            </div>
            <div class="row productspm product-cat">
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <div class="product-layout product-list col-xs-12">
                            <div class="product-thumb transition single-product-cat">
                                <div class="image">
                                    <a href="@Url.Action("ProductDetails","Products", new {productId = item.ProductId})"><img src="@(!string.IsNullOrEmpty(item.DefaultImage) ? ViewBag.BaseFilePath + item.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" alt="@item.Name" class="img-responsive center-block" /></a>
                                    <a href="@Url.Action("ProductDetails", "Products", new { productId = item.ProductId })"><img src="@(!string.IsNullOrEmpty(item.HoverImage) ? ViewBag.BaseFilePath +item.HoverImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" class="img-responsive second-img" alt="@item.Name" /></a>
                                    <span class="salep">sale</span>
                                    <div class="topbutton">
                                        <button type="button" data-toggle="tooltip" title="Add to Wish List">
                                            <svg width="20px" height="20px">
                                                <use xlink:href="/Areas/Shop/Content/app/img/icons/icons.svg#wishlist"></use>
                                            </svg>
                                            <span class="hidden-xs"></span>
                                        </button>
                                        <button type="button" data-toggle="tooltip" title="Compare this Product" class="wishcom">
                                            <svg width="20px" height="20px">
                                                <use xlink:href="/Areas/Shop/Content/app/img/icons/icons.svg#pcom"></use>
                                            </svg>
                                            <span class="hidden-xs"></span>
                                        </button>
                                        <div class="bquickv" title="quickview" data-toggle="tooltip"></div>
                                    </div>
                                </div>
                                <div class="caption">
                                    <h4><a href="@Url.Action("ProductDetails","Products", new {productId=item.ProductId})">@item.Name</a></h4>
                                    <div class="rating pull-left">
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                    </div>
                                    <p class="pricedis price text-right">@*<span class="price-new">@ViewBag.CurrencySymbol@item.MinThresholdPrice</span>*@ <span class="price-old">@ViewBag.CurrencySymbol @item.SellPrice</span></p>
                                    <div class="clearfix"></div>
                                    <div class="button-group">
                                        @if (@item.SellPrice > 0 && @item.SellPrice.HasValue && @item.PercentMargin > 0)
                                        {
                                            <a href="javascript:;" type="button" class="acart" onclick="AddToCart(@item.ProductId)">
                                                <span>Add to Basket</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="javascript:;" type="button" class="acart disabled-btn" disabled>
                                                <span>Add to Basket</span>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }

                <input type="hidden" id="departmentId" value="@ViewBag.departmentId" />
                <input type="hidden" id="ProductGroupsId" value="@ViewBag.groupId" />
            </div>
            <div class="row pagi">
                <div class="col-sm-6 col-xs-6 text-left pagination">

                    @Html.PagedListPager(Model, page => Url.Action("ProductCategories", new { productGroup = ViewBag.groupId ?? null, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, page = page, pagesize = Model.PageSize, department = ViewBag.departmentId, values = values }))


                </div>
                <div class="col-sm-6 col-xs-6 text-right tot">
                    Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) to @Model.PageSize of @(Model.PageCount)(@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber))

                </div>
            </div>

        </div>

    </div>
</div>



<script>
    function GetSortedList(e) {
        var sortvalue = parseInt(e.currentTarget.value);
        var groupId = $("#ProductGroup").val();
        var pagenumber = $("#pagenumber").val();
        var currentFilter = $("#currentFiltervalue").val();
        var searchstring = $("#searchString").val();
        var pageSize = $("#input-limit :selected").val();
        window.location.href = "/Products/ProductCategories?productGroupId=" + groupId + "&sortOrder=" + sortvalue + "&currentFilter=" + currentFilter + "&searchString=" + searchstring + "&page=" + pagenumber + "&pagesize=" + pageSize;
    }

    function PageSizeChanges(e) {
        var pageSize = parseInt(e.currentTarget.value);
        var sortvalue = $("#SortedValue").val();
        var groupId = $("#ProductGroup").val();
        var currentsort = $("#currentsortedvalue").val();
        var currentFilter = $("#currentFiltervalue").val();
        var searchstring = $("#searchString").val();
        var pagenumber = $("#pagenumber").val();
        window.location.href = "/Products/ProductCategories?productGroupId=" + groupId + "&sortOrder=" + currentsort + "&currentFilter=" + currentFilter + "&searchString=" + searchstring + "&page=" + pagenumber + "&pagesize=" + pageSize;
    }

</script>
