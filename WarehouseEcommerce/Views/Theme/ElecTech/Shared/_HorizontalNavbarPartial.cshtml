@using Ganedata.Core.Entities.Domain
@using Ganedata.Core.Entities.Enums;
@model List<Ganedata.Core.Entities.Domain.WebsiteNavigation>

<nav id="primary_nav_wrap" class="header-nav">
    <ul>
        @foreach (var item in Model.Where(x => x.ParentId == null))
        {
            var level1 = Model.Where(x => x.ParentId == item.Id).ToList();
            if (item.Type == WebsiteNavigationType.Blank)
            {
                if (level1.Any())
                {
                    <li>
                        <a href="javascript:;">@item.Name</a>
                        <ul id="in_dropdown">
                            @{
                                int column = 1;
                            }
                            @if (column <= 4)
                            {
                                <div class="div1 in-dropdown-div">
                                    @for (int i = 0; i < level1.Take(4).ToList().Count; i++)
                                    {

                                        if (level1[i].Type == WebsiteNavigationType.Blank)
                                        {
                                            <li><a href="javascript:;">@level1[i].Name</a></li>
                                        }
                                        else if (level1[i].Type == WebsiteNavigationType.Content)
                                        {
                                            <li><a href="@Url.Action("page", "Home", new { pageUrl = level1[i].WebsiteContentPages?.pageUrl })">@level1[i].Name</a></li>
                                        }

                                    }
                                </div>
                                column++;
                            }
                            @if (column <= 8)
                            {
                                <div class="div2 in-dropdown-div">
                                    @for (int i = 4; i < level1.Take(8).ToList().Count; i++)
                                    {

                                        if (level1[i].Type == WebsiteNavigationType.Blank)
                                        {
                                            <li><a href="javascript:;">@level1[i].Name</a></li>
                                        }
                                        else if (level1[i].Type == WebsiteNavigationType.Content)
                                        {
                                            <li><a href="@Url.Action("page", "Home", new { pageUrl = level1[i].WebsiteContentPages?.pageUrl })">@level1[i].Name</a></li>
                                        }

                                    }
                                </div>
                                column++;
                            }
                            @if (column <= 12)
                            {
                                <div class="div3 in-dropdown-div">
                                    @for (int i = 8; i < level1.Take(12).ToList().Count; i++)
                                    {

                                        if (level1[i].Type == WebsiteNavigationType.Blank)
                                        {
                                            <li><a href="javascript:;">@level1[i].Name</a></li>
                                        }
                                        else if (level1[i].Type == WebsiteNavigationType.Content)
                                        {
                                            <li><a href="@Url.Action("page", "Home", new { pageUrl = level1[i].WebsiteContentPages?.pageUrl })">@level1[i].Name</a></li>
                                        }

                                    }
                                </div>
                                column++;
                            }
                            @if (column <= 16)
                            {
                                <div class="div4 in-dropdown-div">
                                    @for (int i = 12; i < level1.Take(16).ToList().Count; i++)
                                    {

                                        if (level1[i].Type == WebsiteNavigationType.Blank)
                                        {
                                            <li><a href="javascript:;">@level1[i].Name</a></li>
                                        }
                                        else if (level1[i].Type == WebsiteNavigationType.Content)
                                        {
                                            <li><a href="@Url.Action("page", "Home", new { pageUrl = level1[i].WebsiteContentPages?.pageUrl })">@level1[i].Name</a></li>
                                        }

                                    }
                                </div>
                                column++;
                            }
                        </ul>
                    </li>
                }
                else
                {

                    <li><a href="javascript:;">@item.Name</a></li>
                }
            }
            else if (item.Type == WebsiteNavigationType.Content)
            {
                <li><a href="@Url.Action("page", "Home", new { pageUrl = item.WebsiteContentPages?.pageUrl })">@item.Name</a></li>
            }




        }
        <li><a class="hardware-active" href="https://ruggedbarcodes.co.uk">Hardware</a></li>
        @*book-demo-1 is for mobile view in dropdown navigation*@
        <li class="book-demo-1"><a href="@Url.Action("page", "Home", new { pageUrl = "get-started" })">Book A Demo</a></li>
        @*<li><a href="#"><i class="fa fa-search"></i></a></li>*@
    </ul>
</nav>