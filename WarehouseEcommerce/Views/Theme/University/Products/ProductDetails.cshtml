@using System.Configuration
@model WarehouseEcommerce.ViewModels.ProductDetailViewModel
@{
    ViewBag.Title = Model.SelectedProduct.Name + " | " + ViewBag.SiteDescription;
    var Images = ConfigurationManager.AppSettings["ImageFormats"].Split(new char[] { ',' });
}
<section class="nb_sec nb_prdlisting_pgsec product-section">
    <div class="container">
        <div class="breadCrumbtopsec">
            <div class="nb_bread_crumbwrap">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Home</a>
                        </li>
                        <li>></li>
                        @if (Model.Category != null && !string.IsNullOrEmpty(Model.Category))
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("list", "Products", new { category = Model.Category })">@Model.Category</a></li>
                            <li>></li>
                        }
                        @if (Model.SubCategory != null && !string.IsNullOrEmpty(Model.SubCategory))
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("list", "Products", new { category = Model.SubCategory })">@Model.SubCategory</a></li>
                            <li>></li>
                        }

                        <li class="breadcrumb-item">@Model.BaseProductName</li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5 col-lg-5">
                <div class="nb_prd_viewingsecWrap" id="Prod_carr_viewer">
                    <span id="zoomViewTrigger"><i class="icon-search"></i></span>
                    <span class="img_view_area">
                        <img id="zoom_01"
                             src="@(!string.IsNullOrEmpty(Model.SelectedProduct.DefaultImage?.Trim()) ? ViewBag.BaseFilePath + Model.SelectedProduct.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")"
                             data-zoom-image="@(!string.IsNullOrEmpty(Model.SelectedProduct.DefaultImage?.Trim()) ? ViewBag.BaseFilePath + Model.SelectedProduct.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" />
                    </span>
                    @if (Model.SelectedProduct.ProductFiles.Count > 1)
                    {
                        <div class="img_thumb_sliderwrap">
                            <div id="gal01" class="owl-carousel owl-theme nb_imageZoomCarrousle">
                                @foreach (var item in (Model.SelectedProduct.ProductFiles))
                                {
                                    var extension = Path.GetExtension(item.FilePath);
                                    <div class="item">
                                        <a href="#" data-image="@(!string.IsNullOrEmpty(item.FilePath) ? ViewBag.BaseFilePath + item.FilePath : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")"
                                                    data-zoom-image="@(!string.IsNullOrEmpty(item.FilePath) ? ViewBag.BaseFilePath + item.FilePath : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")"
                                                    class="@(Model.SelectedProduct.DefaultImage == item.FilePath? "active" : "")">
                                            <img id="zoom_01" src="@(!string.IsNullOrEmpty(item.FilePath) ? ViewBag.BaseFilePath + item.FilePath : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" alt="" />
                                        </a>
                                    </div>

                                }

                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-7 col-lg-6 offset-lg-1">
                <div class="nb_prd_det_rightsec">
                    <h2 class="head">@Model.SelectedProduct.Name</h2>
                    <span class="prd_amnt">@ViewBag.CurrencySymbol@Model.SelectedProduct.SellPrice</span>
                    <div class="availibility">
                        @{ var availableProductCount = Ganedata.Core.Services.Inventory.GetAvailableProductCount(Model.SelectedProduct, ViewBag.SiteId); }
                        @if (availableProductCount > 0)
                        {
                            @((availableProductCount <= 10 ? "only "+ availableProductCount.ToString("#") + " items left" : "Available"))
                        }
                        else
                        {
                            <span>Currently unavailable.</span>
                        }
                    </div>

                    @if (Model.BaseProductType != Ganedata.Core.Entities.Enums.ProductKitTypeEnum.ProductByAttribute)
                    {
                        foreach (var item in Model.SelectedProduct.ProductAttributeValuesMap.Where(a => a.IsDeleted != true).OrderBy(m => m.ProductAttributeValues.AttributeId))
                        {
                            <div>
                                <div class="sizeWrap">
                                    <p>@Html.Raw(item.ProductAttributeValues.ProductAttributes.AttributeName) : <span>@Html.Raw(item.ProductAttributeValues.Value)</span></p>
                                </div>
                            </div>
                        }
                    }

                    @if (Model.BaseProductType == Ganedata.Core.Entities.Enums.ProductKitTypeEnum.ProductByAttribute)
                    {
                        foreach (var attribute in Model.AvailableAttributes)
                        {
                            <div>
                                <div class="sizeWrap">
                                    <p>@Html.Raw(attribute.Name) : <span>@Html.Raw(attribute.SelectedValue)</span></p>
                                    <ul class="size_boxList">
                                        @{
                                            foreach (var attributeValue in attribute.AttributeValues)
                                            {
                                                @Html.Raw("<li class=\"col3 " + (attributeValue.IsSelected ? "active" : "") + (attributeValue.IsAvailableWithCurrentSelection ? "\">" : "unavailable-attribute\">") +
                                                                (attributeValue.IsSelected ? "<a>" : $"<a href=\"ProductDetails?sku={Model.BaseProductSKUCode}&productId={attributeValue.RelatedProductId}\">") +
                                                                (attributeValue.IsColorTyped ?
                                                                                "<span style=\"background-color:" + attributeValue.Color + ";color:" + attributeValue.Color + "\">-</span>" :
                                                                                "<span style=\"color:" + attributeValue.Color + "\">" + attributeValue.Value + "</span>") +
                                                            "</a></li>");
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    }

                <div class="footSec">
                    @if (@Model.SelectedProduct.SellPrice > 0 && @Model.SelectedProduct.SellPrice.HasValue && (availableProductCount > 0))
                    {
                        <div class="qty">
                            <span>quantity</span>
                            @Html.DropDownList("product-quantity", Enumerable.Range(1, (int)availableProductCount).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control" })
                        </div>

                        <button class="addTobasket" onclick="addToCart(@Model.SelectedProduct.ProductId, document.getElementById('product-quantity').value)">Add to basket</button>
                    }
                    else
                    {
                        var totalwishlistitems = Model.SelectedProduct.WebsiteWishListItems.FirstOrDefault(u => u.IsDeleted != true && u.UserId == ViewBag.CurrentUserId && u.IsNotification);

                        if (totalwishlistitems == null)
                        {
                            <button class="notify-btn addTobasket" id="notification-bell__button_@Model.SelectedProduct.ProductId" onclick="addToNotifyList(@Model.SelectedProduct.ProductId)"><i class="fa fa-bell-o list-icon"></i> NOTIFY ME WHEN AVAILABLE</button>
                        }
                        else
                        {
                            <button class="notify-btn addTobasket" id="notification-bell__button_@Model.SelectedProduct.ProductId" style="background-color: red" onclick="redirectToWishListByConfirmation()"><i class="fa fa-bell-o list-icon"></i> NOTIFY ME WHEN AVAILABLE</button>

                        }

                    }

                    @if (Model.SelectedProduct.WebsiteWishListItems.FirstOrDefault(u => u.IsDeleted != true && !u.IsNotification) == null)
                    {
                        <button id="btnwish_@Model.SelectedProduct.ProductId" onclick="addToWishList(@Model.SelectedProduct.ProductId)" class="addtowishlistbtn">Add to Wishlist</button>
                        <a href="javascript:;" class="addtowishlist " id="wish_@Model.SelectedProduct.ProductId" onclick="addToWishList(@Model.SelectedProduct.ProductId)"><i class="icon-love list-icon" style="color:black;font-size:28px;margin-left:15px"></i></a>
                    }
                    else
                    {
                        <button id="btnwish_@Model.SelectedProduct.ProductId" onclick="redirectToWishListByConfirmation()" class="addtowishlistbtn" style="background-color: red !important">Add to Wishlist</button>
                        <a href="javascript:;" class="addtowishlist" id="wish_@Model.SelectedProduct.ProductId" onclick="redirectToWishListByConfirmation("><i class="icon-love list-icon" style="color:red;font-size:28px;margin-left:15px"></i></a>
                    }
                </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="nb_prod_bottomdes">
                    <p class="content">
                       @Html.Raw(Model.SelectedProduct.Description)
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        $("#zoom_01").elevateZoom({
            gallery: "gal01",
            cursor: "pointer",
            galleryActiveClass: "active",
            imageCrossfade: true,
            loadingIcon: "",
            cursor: "crosshair",
            zoomWindowFadeIn: 500,
            zoomWindowFadeOut: 500,
            easing: true,
            zoomWindowWidth: 600,
            zoomWindowHeight: 500,
            responsive: true,
            borderSize: 1,
            destroyContainerOnResize: true,
            zoomWindowOffetx: 50,
            zoomWindowOffety: -25,
            zoomType: "window",
        });
    });
</script>