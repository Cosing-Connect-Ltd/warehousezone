@using System.Configuration
@using Ganedata.Core.Entities.Enums
@model WarehouseEcommerce.ViewModels.ProductDetailViewModel
@{
    ViewBag.Title = Model.Product.Name + " | " + ViewBag.SiteDescription;
    var Images = ConfigurationManager.AppSettings["ImageFormats"].Split(new char[] { ',' });
}
<section class="nb_sec nb_prdlisting_pgsec product-details-section">
    <div class="container">
        @Html.Partial("_ProductDetailBreadCrumb")
        <div class="row">
            <div class="col-md-5 col-lg-4">
                @Html.Partial("_ProductImagesGallery", Model.Product)
            </div>
            <div class="col-md-7 col-lg-8">
                <div class="nb_prd_det_rightsec">
                    <h2 class="head">@Model.Product.Name</h2>
                    <span class="prd_amnt">@ViewBag.CurrencySymbol@Model.Product.SellPrice</span>
                    <div class="availibility">
                        @{ var availableProductCount = Ganedata.Core.Services.Inventory.GetAvailableProductCount(Model.Product, ViewBag.SiteId);
                            ViewBag.AvailableProductCount = availableProductCount;
                        }
                        @if (availableProductCount > 0)
                        {
                            <span>@((availableProductCount <= 10 ? "only " + availableProductCount.ToString("#") + " items left" : "Available"))</span>
                        }
                        else
                        {
                            <span>Currently unavailable.</span>
                        }
                    </div>

                    @Html.Partial("_ProductDetailActionsButtons", Model.Product)

                    @if (Model.ParentProductType != ProductKitTypeEnum.ProductByAttribute)
                    {
                        <div class="attribute-value">
                            <span>@Ganedata.Core.Services.Inventory.GetProductAttributesValueToDisplay(Model.Product.ProductAttributeValuesMap)</span>
                        </div>
                    }

                    @if (Model.ParentProductType == ProductKitTypeEnum.ProductByAttribute)
                    {
                        foreach (var attribute in Model.AvailableAttributes)
                        {
                            <div>
                                <div class="sizeWrap">
                                    <div class="title">@Html.Raw(attribute.Name) : <span>@Html.Raw(attribute.SelectedValue)</span></div>
                                    <ul class="size_boxList">
                                        @{
                                            foreach (var attributeValue in attribute.AttributeValues)
                                            {
                                                @Html.Raw("<li class=\"col3 " + (attributeValue.IsSelected ? "active" : "") + (attributeValue.IsAvailableWithCurrentSelection ? "\">" : "unavailable-attribute\">") +
                                                          (attributeValue.IsSelected ? "<a>" : $"<a href=\"ProductDetails?sku={Model.ParentProductSKUCode}&productId={attributeValue.RelatedProductId}\">") +
                                                          (attributeValue.IsColorTyped ?
                                                              "<span style=\"background-color:" + attributeValue.Color + ";color:" + attributeValue.Color + "\">-</span>" :
                                                              "<span style=\"color:" + attributeValue.Color + "\">" + attributeValue.Value + "</span>") +
                                                          "</a></li>");
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="col-md-12">
                <div class="nb_prod_bottomdes">
                    <p class="content">
                        @Html.Raw(Model.Product.Description)
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

@Html.Partial("_RelatedProducts", Model.RelatedProducts)