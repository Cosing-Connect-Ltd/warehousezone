@model Ganedata.Core.Entities.Domain.ProductFilteringViewModel
@using Ganedata.Core.Entities.Domain


<div class="col-md-4 col-lg-3">
    <div class="nb_prd_filterwrap">
        <div class="prod_count_sec">
            <span class="count">@Model.Count Products</span>
            <ul>
                <li class="list-group-item"><input type="checkbox" id="stockS" class="checkbox-inline" value="In_stock" @(Request.Url.OriginalString.ToLower().Contains("in_stock") ? "checked" : "")>In stock </li>
                <li class="list-group-item"><input type="checkbox" id="stockS" class="checkbox-inline" value="Out_stock" @(Request.Url.OriginalString.ToLower().Contains("out_stock") ? "checked" : "")>Out of stock</li>
            </ul>
        </div>
        <div class="nb_fltr_accrd_wrap">
            <div id="accordion" class="nb_filter_accordion">
                <div class="nb_filter_head price-range-div" id="filter1">
                    <h5 class="mb-0">
                        <button class="btn btn-link"
                                data-toggle="collapse"
                                data-target="#collapseOne"
                                aria-expanded="true"
                                aria-controls="collapseOne">
                            Price
                        </button>
                        <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
                    </h5>
                </div>
                <div id="collapseOne"
                     class="collapse show price-range-div"
                     aria-labelledby="filter1"
                     data-parent="#accordion">
                    <div class="nb_filter_body">
                        <ul class="nb_prd_filter_listouter">

                            <div id="slider-range"></div>

                            <li class="list-group-item" style="display: none">
                                <input type="checkbox" id="priceS" class="checkbox-inline" value="" @(Request.Url.OriginalString.ToLower().Contains("prices") ? "checked" : "")>

                            </li>



                        </ul>
                    </div>
                </div>
                @if (Model.Manufacturer.Count > 0)
                {
                    <div class="nb_filter_head" id="filter2">
                        <h5 class="mb-0">
                            <button class="btn btn-link collapsed"
                                    data-toggle="collapse"
                                    data-target="#collapse2"
                                    aria-expanded="true"
                                    aria-controls="collapse2">
                                Brand
                            </button>
                        </h5>
                    </div>
                    <div id="collapse2"
                         class="collapse show"
                         aria-labelledby="filter2"
                         data-parent="#accordion">
                        <div class="nb_filter_body">
                            <ul class="nb_prd_filter_listouter">
                                @foreach (var item in Model.Manufacturer)
                                {
                                    string name = item.Replace(" ", "_").Replace(",", "^");
                                    <li class="list-group-item"><input type="checkbox" id="BrandS" class="checkbox-inline" title="@(item)" value="@(name)" @(Request.Url.OriginalString.ToLower().Contains(name.ToLower()) ? "checked" : "")>@(item)</li>

                                }
                            </ul>
                        </div>
                    </div>
                }
                @if (Model.subCategories.Count > 0)
                {
                    <div class="nb_filter_head" id="filter3">
                        <h5 class="mb-0">
                            <button class="btn btn-link collapsed"
                                    data-toggle="collapse"
                                    data-target="#collapse3"
                                    aria-expanded="true"
                                    aria-controls="collapse3">
                                By Type
                            </button>
                        </h5>
                    </div>
                    <div id="collapse3"
                         class="collapse show"
                         aria-labelledby="filter3"
                         data-parent="#accordion">
                        <div class="nb_filter_body">
                            <ul class="nb_prd_filter_listouter">
                                @foreach (var item in Model.subCategories)
                                {
                                    string name = item.Replace(" ", "_").Replace(",", "^");
                                    <li class="list-group-item" id="type"><input type="checkbox" id="TypeS" class="checkbox-inline" title="@(item)" value="@(name)" @(Request.Url.OriginalString.ToLower().Contains(name.ToLower()) ? "checked" : "")>@(item)</li>
                                }


                            </ul>
                        </div>
                    </div>
                }
                @* Adding dynmic attributes here *@
                @foreach (var item in Model.AttributeValues)
                {

                    <div class="nb_filter_head" id="filter_@(item.Key)">
                        <h5 class="mb-0">
                            <button class="btn btn-link collapsed"
                                    data-toggle="collapse"
                                    data-target="#collapse_@(item.Key)"
                                    aria-expanded="true"
                                    aria-controls="collapse_@(item.Key)">
                                @item.Value.FirstOrDefault().ProductAttributes.AttributeName
                            </button>
                        </h5>
                    </div>
                    <div id="collapse_@(item.Key)"
                         class="collapse show"
                         aria-labelledby="filter_@(item.Key)"
                         data-parent="#accordion">
                        <div class="nb_filter_body">
                            <ul class="nb_prd_filter_listouter">
                                @foreach (var items in item.Value)
                                {
                                    string name = items.Value.Replace(" ", "_").Replace(",", "^");
                                    <li class="list-group-item"><input type="checkbox" id="@items.ProductAttributes.AttributeName.Replace(" ", "_")" class="checkbox-inline" value="@name" @(Request.Url.OriginalString.ToLower().Contains(name.ToLower()) ? "checked" : "")>@(items.Value)</li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    $(function () {

        var min =Math.floor(@Model.PriceInterval.Item1);
        var max = Math.ceil(@Model.PriceInterval.Item2);
        if ((max - min) <= 1 || isNaN(min) || isNaN(max)) {
            $(".price-range-div").hide();
            return;
        }
        var priceIndex = window.location.href.indexOf("priceS-");
        var prices = priceIndex > -1 ? window.location.href.substr((priceIndex + 7), 14) : null;
        if (prices != null) {
            prices = prices.split("_");
            min = Math.floor(parseFloat(prices[0]));
            max = Math.ceil(parseFloat(prices[1]));
            $('#priceS').prop('checked', true);
            $("#priceS").val(@Model.CurrencySymbol + prices[0] + "_" + @Model.CurrencySymbol+prices[1]);
        }
        $("#slider-range").slider({
            range: true,
            min: Math.floor(@Model.PriceInterval.Item1),
            max: Math.ceil(@Model.PriceInterval.Item2),
            values: [min, max],
            slide: function(event, ui) {
                $("#amount").val("@Model.CurrencySymbol" + Math.floor(ui.values[0]) + " - @Model.CurrencySymbol" + Math.ceil(ui.values[1]));
               
            },
            stop: function (event, ui) {

                $("#priceS").val(ui.values[0] + "_" + ui.values[1]);


                $("#priceS").click();


            }
        });
        $("#amount").val(@Model.CurrencySymbol+min +
            "-" +
            @Model.CurrencySymbol+max);


    });
</script>