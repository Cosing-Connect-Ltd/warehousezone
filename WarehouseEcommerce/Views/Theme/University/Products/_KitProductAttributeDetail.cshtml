@model WarehouseEcommerce.ViewModels.ProductDetailViewModel
<section class="nb_sec nb_prdlisting_pgsec">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                @Html.Hidden("step-number-tracking")
                <div class="nb_prd_det_rightsec">
                    <h2 class="head">@Model.SelectedProduct.Name</h2>
                    <span class="prd_amnt">@ViewBag.CurrencySymbol@Model.SelectedProduct.SellPrice</span>

                    <div class="availibility">
                        @{ var stockAvailable = Ganedata.Core.Services.Inventory.GetStockDetailByProductId(Model.SelectedProduct.ProductId, ViewBag.SiteId); }
                        @if (stockAvailable > 0)
                        {
                            <input type="hidden" class="availablity" value="true">
                            @*<span>Availability:</span>
                                <br />*@
                            @((stockAvailable <= 10 ? "only "+ stockAvailable.ToString("#") + " items left" : "Available"))
                        }
                        else
                        {
                            <span></span>
                            <br />
                            <span>Currently unavailable.</span>
                        }
                    </div>

                    @if (Model.BaseProductType != Ganedata.Core.Entities.Enums.ProductKitTypeEnum.ProductByAttribute)
                    {
                        foreach (var item in Model.SelectedProduct.ProductAttributeValuesMap.Where(a => a.IsDeleted != true).OrderBy(m => m.ProductAttributeValues.AttributeId))
                        {
                            <div>
                                <div class="sizeWrap">
                                    <p>@Html.Raw(item.ProductAttributeValues.ProductAttributes.AttributeName) : <span>@Html.Raw(item.ProductAttributeValues.Value)</span></p>
                                </div>
                            </div>
                        }
                    }

                    @if (Model.BaseProductType == Ganedata.Core.Entities.Enums.ProductKitTypeEnum.ProductByAttribute)
                    {
                        foreach (var attribute in Model.AvailableAttributes)
                        {
                            <div>
                                <div class="sizeWrap">
                                    <p>@Html.Raw(attribute.Name) : <span>@Html.Raw(attribute.SelectedValue)</span></p>
                                    <ul class="size_boxList">
                                        @{
                                            foreach (var attributeValue in attribute.AttributeValues)
                                            {
                                                @Html.Raw("<li class=\"col3 " + (attributeValue.IsSelected ? "active" : "") + (attributeValue.IsAvailableWithCurrentSelection ? "\">" : "unavailable-attribute\">") +
                                                                (attributeValue.IsSelected ? "<a href='javascript:;'id='selected-productids' data-productid=" + Model.SelectedProduct.ProductId + " data-skuCode=" + Model.SelectedProduct.SKUCode + ">" : $"<a href='javascript:;' onclick = 'getSelectedAttributesProduct(event,\"" + Model.BaseProductSKUCode + "\"," + (attributeValue.RelatedProductId) + "," + Model.Quantity + ")'>") +
                                                                (attributeValue.IsColorTyped ?
                                                                                "<span style=\"background-color:" + attributeValue.Color + ";color:" + attributeValue.Color + "\">-</span>" :
                                                                                "<span style=\"color:" + attributeValue.Color + "\">" + attributeValue.Value + "</span>") +
                                                            "</a></li>");
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    }
                </div>
                <label style="display:none"><input type="checkbox" id="quantity-checkbox" value="@Model.Quantity">&nbsp;  Select same attribute for this product</label>
            </div>
        </div>
        <div class="row">
            <div style="margin-left:15px">
                <label>Item Quantity</label><br />
                <div class="attribute-dropdown">
                    @Html.DropDownList("quantity-dropdown", ViewBag.QuantityList as SelectList, null, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

</section>
