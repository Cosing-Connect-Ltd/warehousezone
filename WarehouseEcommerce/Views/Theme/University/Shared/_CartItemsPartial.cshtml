@using System.Web.Mvc.Html
@using Ganedata.Core.Entities.Domain
@using Ganedata.Core.Entities.Enums
@model WebsiteCartItemsViewModel
@{
    var firstItem = Model.WebsiteCartItems.FirstOrDefault();
}


<!-- Modal -->
@if (Model.IsCollectionAvailable)
{
    <div class="modal fade" id="ChooseStoreModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Select Collection Point</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body billandshipsec">
                    <div class="checkout-options-wrapper">
                        <div class="addNewAddrWrap">
                            @Html.Hidden("collectionPointId", Model.CollectionPointId)
                            @Html.Hidden("collectionPointName", Model.CollectionPointName)
                            @Html.Hidden("collectionPointAddress", Model.CollectionPointAddress)
                            @Html.Partial("_CollectionPointSelector")
                            <div>
                                <button class="addnwShopAdrrbtn" id="select-collection-point__button" onclick="setSelectedCollectionPoint()" data-toggle="modal" disabled data-target="#ChooseStoreModal">Select Collection Point</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function onCollectionPointSelected(id, name, postcode, address) {
            if ($("#select-collection-point__button").length > 0) {
                $("#select-collection-point__button").removeAttr("disabled");
            }
        }

        function setSelectedCollectionPoint() {
            $("#collection-point-name")[0].innerText = $("#collectionPointName")[0].value;
            $("#collection-point-address")[0].innerText = ' - ' + $("#collectionPointAddress")[0].value;

            $.ajax({
                type: "GET",
                url: basePath + "/Products/GetCartItemsCollectionAvailability/",
                data: { id: $("#collectionPointId")[0].value, name: $("#collectionPointName")[0].value, address: $("#collectionPointAddress")[0].value },
                dataType: 'json',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var elementId = "#collection_status_" + data[i].Id;

                        sethAvailabilityStatus(data[i].IsAvailable, elementId);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Error' + textStatus + "/" + errorThrown);
                }
            });
        }
    </script>
}

@if (Model.IsDeliveryAvailable)
{
    <div class="modal fade" id="ChooseShippingAddressModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Select Shipping Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body billandshipsec">
                    <div class="checkout-options-wrapper">
                        <div class="addNewAddrWrap">
                            @Html.Hidden("shippingAddressId", Model.ShippingAddressId)
                            @Html.Hidden("shippingAddressPostCode", Model.ShippingAddressPostCode)
                            @Html.Partial("_ShippingAddressSelector", Model.ShippmentAddresses)
                            @if (Model.ShippmentAddresses.Count() > 0)
                            {
                                <div>
                                    <button class="addnwShopAdrrbtn" id="select-shipping-address__button" onclick="setSelectedShippingAddress()" data-toggle="modal" disabled data-target="#ChooseShippingAddressModal">Select Address</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function onShippingAddressSelected(id, postcode) {
            if ($("#select-shipping-address__button").length > 0) {
                $("#select-shipping-address__button").removeAttr("disabled");
            }
        }

        function setSelectedShippingAddress() {
            $("#shipping-address-postcode")[0].innerText = $("#shippingAddressPostCode")[0].value;

            $.ajax({
                type: "GET",
                url: basePath + "/Products/GetCartItemsDeliveryAvailability/",
                data: { id: $("#shippingAddressId")[0].value, postCode: $("#shippingAddressPostCode")[0].value },
                dataType: 'json',
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var elementId = "#delivery_status_" + data[i].Id;

                        sethAvailabilityStatus(data[i].IsAvailable, elementId);
                    }

                    $("#ChooseShippingAddressModal").modal('hide');
                },

                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Error' + textStatus + "/" + errorThrown);
                }
            });
        }
    </script>
}

<section class="nb_sec nb_prdlisting_pgsec mb-5">
    <div class="container">
        <div class="nb_sec checkconfirmSec">

            <div class="checkoutInnersec Paymentsec mb-5">
                @if (Model.WebsiteCartItems == null || Model.WebsiteCartItems.Count > 0)
                {
                    <h4 class="ordConfirmHead">Basket</h4>
                }
                <div class="tableWrap">
                    @if (Model.WebsiteCartItems == null || Model.WebsiteCartItems.Count > 0)
                    {
                        <table class="basketTable table-responsive">
                            <tbody>
                                @if (Model.ShowCartPopUp != true)
                                {
                                    <tr>
                                        <td class="topTd" colspan="4"></td>
                                        @if (Model.IsCollectionAvailable)
                                        {
                                            <td>
                                                <div class="headBoxTop">
                                                    <h3 class="head">Store Collection</h3>
                                                    <p><span id="collection-point-name">@Model.CollectionPointName</span><span id="collection-point-address">@(Model.CollectionPointAddress != null ? ", " + Model.CollectionPointAddress : "")</span></p>
                                                </div>

                                            </td>
                                        }
                                        @if (Model.IsDeliveryAvailable)
                                        {
                                            <td>
                                                <div class="headBoxTop">
                                                    <h3 class="head">Home Delivery</h3>
                                                    <p>@(!string.IsNullOrEmpty(Model.ShippingAddressPostCode?.Trim()) ? "Selected PostCode: " : string.Empty)<span id="shipping-address-postcode">@Model.ShippingAddressPostCode</span></p>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }

                                <tr class="headRow cmnRow">
                                    <td class="prd">Product</td>
                                    <td class="price">Price</td>
                                    <td class="qty">Quantity</td>
                                    <td class="tot">Total</td>
                                    @if (Model.ShowCartPopUp != true)
                                    {
                                        if (Model.IsCollectionAvailable)
                                        {
                                            <td class="store">
                                                <a href="" data-toggle="modal" data-target="#ChooseStoreModal" class="chsStoreLnk">Choose Store</a>
                                            </td>
                                        }
                                        if (Model.IsDeliveryAvailable)
                                        {
                                            <td class="store">
                                                <a href="" data-toggle="modal" data-target="#ChooseShippingAddressModal" class="chsStoreLnk">Choose Shipping Address</a>
                                            </td>
                                        }
                                    }
                                </tr>

                                @foreach (var item in Model.WebsiteCartItems)
                                {
                                    <tr class="cmnRow">
                                        <td class="prd">
                                            <div class="prdCellwrap">
                                                <div class="inrow">
                                                    <span class="imgWrap">
                                                        <img src="@(!string.IsNullOrEmpty(item.ProductMaster.DefaultImage) ? ViewBag.BaseFilePath + item.ProductMaster.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" />
                                                    </span>
                                                    <span class="prdName">
                                                        @(item.ProductMaster?.Name)


                                                        @if (item?.ProductMaster?.ProductType != null && item.ProductMaster.ProductType == Ganedata.Core.Entities.Enums.ProductKitTypeEnum.Kit && item.KitProductCartItems != null && item.KitProductCartItems.Count > 0)
                                                        {
                                                            foreach (var cartitem in item.KitProductCartItems)
                                                            {
                                                                <p>
                                                                    <b> @Convert.ToInt32(cartitem.Quantity)</b> x @cartitem.SimpleProductMaster.Name <br />
                                                                </p>
                                                            }
                                                        }

                                                    </span>
                                                </div>
                                                @if (Model.ShowCartPopUp != true)
                                                {
                                                    <div class="inrow btm">
                                                        <span class="imgWrap"> </span>
                                                        <span class="prdName">
                                                            <i class="icon-love"></i>
                                                            Add to wishlist
                                                        </span>
                                                    </div>
                                                }
                                            </div>
                                        </td>
                                        <td class="price">
                                            <div class="priceWrapinner">
                                                @Model.CurrenySymbol@item.Price
                                            </div>
                                        </td>
                                        <td class="qty">
                                            <div class="QtyWrap">
                                                <div class="QtyWrapinner">
                                                    <span class="min" onclick="reduceQuantity(@item.Id);">-</span>
                                                    <input class="coutnerInput" id="counter_@item.Id" type="number" min="1" onkeypress="return event.charCode >= 48 && event.charCode <= 57" onchange="updateCartItem(@item.CartId, this.value)" value="@Convert.ToInt32(item.Quantity)" />
                                                    <span class="add" onclick="increseQuantity(@item.Id);">+</span>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="tot">
                                            <div id="total_amnt" class="priceTotal @(Model.ShowCartPopUp != true ? "in-basket-price-total" : string.Empty)">
                                                @Model.CurrenySymbol@item.ProductTotalAmount
                                            </div>
                                            @if (Model.ShowCartPopUp != true)
                                            {
                                                <a href="javascript:;" class="removeBtn" onclick="removeCartItem(@item.CartId)"> Remove</a>
                                            }
                                        </td>
                                        @if (Model.ShowCartPopUp != true)
                                        {
                                            if (Model.IsCollectionAvailable)
                                            {
                                                <td class="store greyBox">
                                                    <div class="greyBoxInner">
                                                        <p class="orderNowTxt" id="collection_status_@item.Id">
                                                            <span class="available" @(item.IsAvailableForCollection == true ? "" : "hidden")><i class="fa fa-check-circle-o" aria-hidden="true"></i> Available for Collection</span>
                                                            <span class="unavailable" @(item.IsAvailableForCollection == false ? "" : "hidden")><i class="fa fa-ban" aria-hidden="true"></i> Unavailable In Store!</span>
                                                            <span class="unselected" @(item.IsAvailableForCollection == null && Model.CollectionPointId == null ? "" : "hidden")><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Select A Collection Point!</span>
                                                        </p>
                                                    </div>
                                                </td>
                                            }
                                            if (Model.IsDeliveryAvailable)
                                            {
                                                <td class="homeDel greyBox">
                                                    <div class="greyBoxInner">
                                                        <p class="orderNowTxt" id="delivery_status_@item.Id">
                                                            <span class="available" @( item.IsAvailableForDelivery ==  true ? "" : "hidden")><i class="fa fa-check-circle-o" aria-hidden="true"></i> Available for Delivery</span>
                                                            <span class="unavailable" @(item.IsAvailableForDelivery == false ? "" : "hidden")><i class="fa fa-ban" aria-hidden="true"></i> Unavailable For Delivery!</span>
                                                            <span class="unselected" @(item.IsAvailableForDelivery == null && string.IsNullOrEmpty(Model.ShippingAddressPostCode?.Trim()) ? "" : "hidden")><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Choose A Shipping Address!</span>
                                                        </p>
                                                    </div>
                                                </td>
                                            }
                                        }
                                    </tr>
                                }
                                <tr class="cmnRow subTotRow">
                                    <td class="prd"></td>
                                    <td class="price"></td>
                                    <td class="qty subtotalCell" colspan="2">
                                        <div class="subtotalCellInner">
                                            <span>Sub Total</span> <span>@Model.CurrenySymbol@(Model.TotalAmount)</span>
                                        </div>
                                    </td>

                                    @if (Model.ShowCartPopUp != true)
                                    {
                                        if (Model.IsCollectionAvailable)
                                        {
                                            <td class="store greyBox">
                                                <div class="botomBtnsec in-table-button-section">
                                                    <button class="btmbtn pro" onclick="@(Model.ShowLoginPopUp == true ? "GetLoggedIn('" + (bool?)Model.ShowLoginPopUp + "');" : "proceedToPickup();")">PROCEED TO PICKUP</button>
                                                </div>
                                            </td>
                                        }
                                        if (Model.IsDeliveryAvailable)
                                        {
                                            <td class="homeDel greyBox">
                                                <div class="botomBtnsec in-table-button-section">
                                                    <button class="btmbtn pro" onclick="@(Model.ShowLoginPopUp == true ? "GetLoggedIn('" + (bool?)Model.ShowLoginPopUp + "');" : "proceedToDelivery();")">PROCEED TO DELIVERY</button>
                                                </div>
                                            </td>
                                        }
                                    }
                                </tr>
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-center m-4">Oops, Your Basket Is Empty!</div>
                    }
                </div>
                <div class="botomBtnsec">
                    @if (Model.ShowCartPopUp != true)
                    {
                        if (Model.IsCollectionAvailable || Model.IsDeliveryAvailable)
                        {
                            <button class="btmbtn pro mobile-checkout" style="display: none;" onclick="@(Model.ShowLoginPopUp == true ? "GetLoggedIn('" + (bool?)Model.ShowLoginPopUp + "');" : "proceedToMobileCheckout();")">PROCEED TO CHECKOUT</button>
                        }
                        <a class="btmbtn sho" href="@Url.Action("list", "Products")">CONTINUE SHOPPING</a>
                    }
                </div>
            </div>
        </div>
    </div>
    <script>
        function increseQuantity(cartItemId) {
            var element = document.getElementById("counter_" + cartItemId);
            var quantity = parseInt(element.value);

            quantity++;

            element.value = quantity;

            updateCartItem(cartItemId, quantity)
        }

        function reduceQuantity(cartItemId) {
            var element = document.getElementById("counter_" + cartItemId);
            var quantity = parseInt(element.value);
            if (quantity > 1) {
                quantity--;
                element.value = quantity;
                updateCartItem(cartItemId, quantity)
            }
        }
    </script>

    @if (Model.IsCollectionAvailable || Model.IsDeliveryAvailable)
    {
        <script>
            function sethAvailabilityStatus(isAvailable, elementId) {
                if (isAvailable === true) {
                    $(elementId + " .unavailable").attr("hidden", "");
                    $(elementId + " .available").removeAttr("hidden");
                    $(elementId + " .unselected").attr("hidden", "");
                } else if (isAvailable === false) {
                    $(elementId + " .unavailable").removeAttr("hidden");
                    $(elementId + " .available").attr("hidden", "");
                    $(elementId + " .unselected").attr("hidden", "");
                }
                else {
                    $(elementId + " .available").attr("hidden", "");
                    $(elementId + " .unavailable").attr("hidden", "");
                    $(elementId + " .unselected").removeAttr("hidden");
                }
            }

            function proceedToDelivery() {
                proceedToCheckout(@((int)DeliveryMethod.ToShipmentAddress), $("#shippingAddressId")[0].value);
            }

            function proceedToPickup() {
                proceedToCheckout(@((int)DeliveryMethod.ToPickupPoint), $("#collectionPointId")[0].value);
            }

            function proceedToCheckout(deliveryMethod, destinationId) {
                window.location.href = basePath + "/Orders/ProceedToCheckout?deliveryMethod=" + deliveryMethod + "&destinationId=" + destinationId
            }

            function proceedToMobileCheckout() {
                window.location.href = basePath + "/Orders/MobileCheckout"
            }
        </script>
    }
</section>
