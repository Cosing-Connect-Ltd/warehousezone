@using Ganedata.Core.Entities.Domain
@using Ganedata.Core.Entities.Enums
@model WarehouseEcommerce.ViewModels.ProductViewModel
@if (Model.productMasterList.Count > 0)
{
    @Html.Partial("_ProductByAttributeSelectorModal")
    <section class="nb_sec nb_feat_prod_sec feature-product-overflow">
        <div class="container">
            <div class="inside-container">

                @if (!string.IsNullOrEmpty(Model.FeaturedText))
                {
                    <div class="nb_header_style1">
                        <h3>@Model.FeaturedText</h3>
                    </div>
                }
                <div class="row feature-list">
                    <div class="owl-carousel owl-theme nb_featuredPrdCarrousle nb_prd_listing_wrap">
                        @foreach (var item in Model.productMasterList)
                        {
                            item.ProductTagMaps = item.ProductTagMaps.Where(u => u.IsDeleted != true).Where(u => u.ProductTag.IsDeleted != true && !string.IsNullOrEmpty(u.ProductTag.IconImage)).OrderBy(x => x.ProductTag.SortOrder).ToList();


                            <div class="item prd_lst_boxouter">
                                @for (int i = 0; i < item.ProductTagMaps.Count; i++)
                                {

                                    if (i < 3)
                                    {
                                        var imageIcon = item.ProductTagMaps.ToList()[i].ProductTag.IconImage;
                                        <span class="badge badge-@i">
                                            <img src="@(ViewBag.BaseFilePath + imageIcon)" alt="" />
                                        </span>

                                    }

                                }

                                <span class="imagewrap">
                                    <a href="@Url.Action("ProductDetails", "Products", new {sku = item.SKUCode})">
                                        <img src="@(!string.IsNullOrEmpty(item.DefaultImage) ? ViewBag.BaseFilePath + item.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" />
                                    </a>
                                </span>
                                <h3 class="prdName">
                                    <a class="prdName" href="@Url.Action("ProductDetails", "Products", new {sku = item.SKUCode})">
                                        @item.Name
                                    </a>
                                </h3>
                                <div class="foot">
                                    <a class="prd_amnt" href="@Url.Action("ProductDetails", "Products", new {sku = item.SKUCode})">
                                        @ViewBag.CurrencySymbol@item.SellPrice
                                    </a>
                                    @if (item.ProductType != ProductKitTypeEnum.Grouped && item.ProductType != ProductKitTypeEnum.Kit)
                                    {
                                        <ul class="icolist">
                                            @if (Ganedata.Core.Services.Inventory.IsProductAvailableToSell(@item, ViewBag.SiteId) && item.ProductType != ProductKitTypeEnum.ProductByAttribute)
                                            {
                                                <li>
                                                    <a href="javascript:;" onclick="addToCart(@item.ProductId)"><i class="cart-icon icon-shopping-cart"></i></a>
                                                </li>


                                            }
                                            else if (Ganedata.Core.Services.Inventory.IsProductAvailableToSell(@item, ViewBag.SiteId) && item.ProductType == ProductKitTypeEnum.ProductByAttribute)
                                            {
                                                <li>
                                                    <a href="javascript:;" onclick="showProductByAttributeSelector('@item.SKUCode')"><i class="cart-icon icon-shopping-cart"></i></a>
                                                </li>
                                            }
                                            else
                                            {
                                                var isItemInNotifyList = item.WebsiteWishListItems.Any(u => u.IsDeleted != true && u.UserId == ViewBag.CurrentUserId && u.IsNotification);

                                                if (!isItemInNotifyList)
                                                {
                                                    <li>
                                                        <a href="javascript:;" onclick="@(item.ProductType != ProductKitTypeEnum.ProductByAttribute ? "addToNotifyList(" + item.ProductId + ")" : "showProductByAttributeSelector('" + item.SKUCode + "', true)")" id="notification-bell_@item.ProductId"><i class="bel-icon fa fa-bell-o list-icon" style="color:black"></i></a>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li>
                                                        <a href="javascript:;" onclick="@(item.ProductType != ProductKitTypeEnum.ProductByAttribute ? "redirectToWishListByConfirmation()" : "showProductByAttributeSelector('" + item.SKUCode + "', true)")" id="notification-bell_@item.ProductId"><i class="bel-icon fa fa-bell-o list-icon" style="color:red"></i></a>
                                                    </li>

                                                }


                                            }

                                            @{
                                                var isItemInWishList = item.WebsiteWishListItems.Any(u => u.IsDeleted != true && u.UserId == ViewBag.CurrentUserId && !u.IsNotification);
                                            }

                                            @if (!isItemInWishList)
                                            {
                                                <li>
                                                    <a href="javascript:;" id="wish_@item.ProductId" onclick="@(item.ProductType != ProductKitTypeEnum.ProductByAttribute ? "addToWishList(" + item.ProductId + ")" : "showProductByAttributeSelector('" + item.SKUCode + "', true)")"><i class="icon-love list-icon" style="color: black;font-size: 28px;"></i></a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    <a href="javascript:;" id="wish_@item.ProductId" onclick="@(item.ProductType != ProductKitTypeEnum.ProductByAttribute ? "redirectToWishListByConfirmation()" : "showProductByAttributeSelector('" + item.SKUCode + "', true)")"><i class="icon-love list-icon" style="color: red;font-size: 28px;"></i></a>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </div>



                            </div>

                        }
                    </div>

                </div>
            </div>
        </div>
    </section>
}