@model Ganedata.Core.Entities.Domain.CheckoutViewModel
@using Ganedata.Core.Entities.Enums;

<div class="addNewAddrWrap">
    @{
        var titleTarget = (Model.CurrentStep == CheckoutStep.ShippingAddress || (CheckoutStep)Model.StepsHistory.LastOrDefault(s => s != Model.CurrentStep) == CheckoutStep.ShippingAddress ? "Shipping" : "Billing");
    }
    <h5 class="subheadCmn">@(Model.AccountAddress == null? "Add " + titleTarget + " address": "Edit " + titleTarget + " Address")</h5>
    <div class="addNwAdrrFormWrap">
    @using (Html.BeginForm("SaveAddress", "Orders", new { deliveryMethodId = Model.DeliveryMethodId, billingAddressId = Model.BillingAddressId }))
    {
        <div class="row" id="post-code__search-box">
            <div class="col-lg-6">
                <div class="form-group">
                    <div class="findAddrWrap">
                        <input type="text" id="postCode" name="search" class="findAddrInput text-search-postcode" placeholder="Enter Postcode" />
                        <button class="fadBtn" onclick="SearchPostCode();">Search</button>
                    </div>
                </div>
            </div>
            <div id="selectAddresss" class="col-lg-6" style="display: none">
                <div class="form-group">
                    <select id="selectApiAddress" name="address" class="find-address-select" onchange="onAddressDropdownChange()">
                    </select>
                </div>
            </div>
        </div>

        @Html.HiddenFor(model => model.AccountAddress.AddressID)
        <div class="row" id="address__input-box">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.EditorFor(model => model.AccountAddress.AddressLine1, new { htmlattributes = new { @placeholder = "Address Line 1", @class = "AddressLine1", @required = "Required", @oninput = "validateForm()" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.AccountAddress.AddressLine2, new { htmlattributes = new { @placeholder = "Address Line 2", @class = "AddressLine2", @required = "Required", @oninput = "validateForm()" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.AccountAddress.AddressLine3, new { htmlattributes = new { @placeholder = "Address Line 3", @class = "AddressLine3", @required = "Required", @oninput = "validateForm()" } })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.EditorFor(model => model.AccountAddress.Telephone, new { htmlattributes = new { @placeholder = "Telephone Number", @class = "Telephone", @required = "Required", @oninput = "validateForm()" } })
                </div>
                <div class="form-group">
                    @Html.DropDownListFor(model => model.AccountAddress.CountryID, new SelectList(Model.Countries, "CountryID", "CountryName"), new { @required = "Required", @oninput = "validateForm()" })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.AccountAddress.PostCode, new { htmlattributes = new { @placeholder = "Postal Code", @class = "PostCode", @required = "Required", @oninput = "validateForm()" } })
                </div>
            </div>

            @if (Model.CurrentStep == CheckoutStep.ShippingAddress || (CheckoutStep)Model.StepsHistory.LastOrDefault(s => s != Model.CurrentStep) == CheckoutStep.ShippingAddress)
            {

                <input type="hidden" name="AccountAddress.AddTypeShipping" id="AccountAddress.AddTypeShipping" value="true" />
            }
            else
            {
                <input type="hidden" name="AccountAddress.AddTypeBilling" id="AccountAddress.AddTypeBilling" value="true" />
            }

            @Html.HiddenFor(model => model.AccountAddress.AccountID, (int)(Model.AccountId))
        </div>

        <div class="saveAddrWrap">
            <button type="Submit" name="submitNewsletter" id="submit-address__button" class="cancel saveAddrBtn">SAVE ADDRESS</button>&nbsp;&nbsp;
            <a href="@Url.Action("GoToPreviousStep","orders")" class="saveAddrBtn">BACK</a>
        </div>
    }
    </div>
</div>

<script>
    function validateForm() {
        if (!!$('#AccountAddress_AddressLine1').val() &&
            !!$('#AccountAddress_AddressLine2').val() &&
            !!$('#AccountAddress_AddressLine3').val() &&
            !!$('#AccountAddress_Telephone').val() &&
            !!$('#AccountAddress_CountryID').val() &&
            !!$('#AccountAddress_PostCode').val()) {
            $("#submit-address__button").removeAttr("disabled");
        }
        else {
            $("#submit-address__button").attr("disabled", "");
        }
    };

    validateForm();
</script>