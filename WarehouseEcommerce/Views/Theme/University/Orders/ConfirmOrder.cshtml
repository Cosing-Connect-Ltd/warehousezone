@model List<Ganedata.Core.Entities.Domain.OrderDetailSessionViewModel>
@using Ganedata.Core.Entities.Enums;
@{
    ViewBag.Title = "Confirm Order";
}
@{
    var addresses = ViewBag.Addresses as List<Ganedata.Core.Entities.Domain.AccountAddresses>;

}




<section class="nb_sec nb_prdlisting_pgsec">
    <div class="container">
        <div class="breadCrumbtopsec">
            <div class="nb_bread_crumbwrap">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li>></li>
                        <li class="breadcrumb-item">
                            <a href="#">Checkout Confirmation</a>
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
        <div class="nb_sec checkconfirmSec">
            @Html.Partial("_OrderProgressBar", OrderProgressStep.ReviewItems)

            <div class="orderConfirmationSection">
                <h4 class="ordConfirmHead">Order Confirmation</h4>
                <div class="row">
                    <div class="col-lg-6">
                        @if (addresses != null)
                        {
                            <h4 class="subHead">
                                Billing Address
                            </h4>
                            var billingaddress = addresses.FirstOrDefault(u => u.AddTypeBilling == true);
                            if (billingaddress != null)
                            {
                                <p class="content">
                                    @billingaddress.AddressLine1@(!string.IsNullOrEmpty(billingaddress.AddressLine2) ? $", {billingaddress.AddressLine2}" : "")@(!string.IsNullOrEmpty(billingaddress.AddressLine3) ? $", {billingaddress.AddressLine3}" : "") <br />
                                    @billingaddress.PostCode@(!string.IsNullOrEmpty(billingaddress.GlobalCountry?.CountryName) ? $", {billingaddress.GlobalCountry.CountryName}" : ""), Phone: @billingaddress.Telephone
                                </p>
                            }

                            if ((DeliveryMethod)ViewBag.DeliveryMethodId == DeliveryMethod.ToShipmentAddress)
                            {
                                <h4 class="subHead">
                                    Shipment Address
                                </h4>
                                var shipppingAddress = addresses.FirstOrDefault(u => u.AddTypeShipping == true);
                                if (shipppingAddress != null)
                                {
                                    <p class="content">
                                        @shipppingAddress.AddressLine1@(!string.IsNullOrEmpty(shipppingAddress.AddressLine2) ? $", {shipppingAddress.AddressLine2}" : "")@(!string.IsNullOrEmpty(shipppingAddress.AddressLine3) ? $", {shipppingAddress.AddressLine3}" : "") <br />
                                        @shipppingAddress.PostCode@(!string.IsNullOrEmpty(shipppingAddress.GlobalCountry?.CountryName) ? $", {shipppingAddress.GlobalCountry.CountryName}" : ""), Phone: @shipppingAddress.Telephone
                                    </p>
                                }
                            }
                        }

                        @if ((DeliveryMethod)ViewBag.DeliveryMethodId == DeliveryMethod.ToPickupPoint && ViewBag.CollectionPoint != null)
                        {
                            <h4 class="subHead">
                                Collection Point
                            </h4>
                            <p class="content">

                                <b>@(ViewBag.CollectionPoint?.WarehouseName) </b> <br />
                                @ViewBag.CollectionPoint.AddressLine1@(!string.IsNullOrEmpty(ViewBag.CollectionPoint.AddressLine2) ? $", {ViewBag.CollectionPoint.AddressLine2}" : "")@(!string.IsNullOrEmpty(ViewBag.CollectionPoint.AddressLine3) ? $", {ViewBag.CollectionPoint.AddressLine3}" : "") <br />
                                @ViewBag.CollectionPoint.PostalCode@(!string.IsNullOrEmpty(ViewBag.CollectionPoint.City) ? $", {ViewBag.CollectionPoint.City}" : "")@(!string.IsNullOrEmpty(ViewBag.CollectionPoint.GlobalCountry?.CountryName) ? $", {ViewBag.CollectionPoint.GlobalCountry.CountryName}" : "")
                            </p>
                        }

                        <h4 class="subHead">
                            Delivery Method
                        </h4>
                        @if ((DeliveryMethod)ViewBag.DeliveryMethodId == DeliveryMethod.ToPickupPoint)
                        {
                            <p class="content">Pick up (from collection point) - Free</p>
                        }
                        else
                        {
                            <p class="content">Delivery by @ViewBag.ShippingRule.Courier @(!string.IsNullOrEmpty(ViewBag.ShippingRule.Description?.Trim()) ? $"({ViewBag.ShippingRule.Description})" : "") - @ViewBag.CurrencySymbol@ViewBag.ShippingRule.Price</p>
                        }
                        <h4 class="subHead">
                            Payment Method
                        </h4>
                        <p class="content">
                            @((PaymentMethod)ViewBag.paymentMethod == PaymentMethod.SagePay ? "Sage Pay" : ((PaymentMethod)ViewBag.paymentMethod).ToString())
                        </p>
                    </div>
                    <div class="offset-lg-1 col-lg-3">
                        <h4 class="subHead">
                            Item Details
                        </h4>
                        <ul class="itemList">
                            @foreach (var item in Model)
                            {
                                <li>
                                    @(item.ProductMaster?.Name)<br />
                                    @ViewBag.CurrencySymbol@item.Price, Qty: @item.Qty
                                </li>
                            }
                        </ul>
                        <h4 class="subHead">Total Amount</h4>
                        <h4 class="subHead">@ViewBag.CurrencySymbol@(ViewBag.TotalPrice == null ? 0 : ViewBag.TotalPrice)</h4>

                    </div>
                    <div class="saveAddrWrap mt-5 mb-5 ml-3 mr-3">
                        @if ((PaymentMethod)ViewBag.paymentMethod == PaymentMethod.Paypal)
                        {
                            <form action="@((string)ViewBag.PAYPALURL)" method="post">
                                <div class="row">

                                    <fieldset>
                                        <input class="full-width" type="hidden" name="business" value="shoaib@ganedata.co.uk">
                                        <input type="hidden" name="cmd" value="_xclick">
                                        <input type="hidden" name="item_name" value="Cart Items" />
                                        <input type="hidden" name="return" value="@((string)ViewBag.RetUrl)">
                                        <input type="hidden" name="notify_url" value="@((string)ViewBag.PayPalIpnUrl)">
                                        <input type="hidden" NAME="currency_code" value="GBP">
                                        <input type="hidden" name="OrderId" value="@ViewBag.OrdersId" />
                                        <input type="hidden" name="amount" value="@ViewBag.TotalQty" />
                                    </fieldset>

                                </div>
                                <div class="button-submit">
                                    <button type="Submit" name="submitNewsletter" class="saveAddrBtn">Proceed To Payment</button>
                                    @*<a href="@Url.Action("Index","Test")" class="btn btn-block cash-btn cashbtn" name="submitNewsletter"> Proceed To Payment</a>*@
                                </div>

                            </form>
                        }
                        else if ((PaymentMethod)ViewBag.paymentMethod == PaymentMethod.SagePay)
                        {
                            using (Html.BeginForm("SagePay", "Orders", FormMethod.Post))
                            {
                                <div class="row">
                                    <fieldset>

                                        <input type="hidden" NAME="currency_code" value="GBP">
                                        <input type="hidden" name="OrderId" value="@ViewBag.OrdersId" />
                                        <input type="hidden" name="TotalAmount" value="@ViewBag.TotalQty" />

                                    </fieldset>
                                </div>
                                <div class="button-submit">
                                    <button type="Submit" name="submitNewsletter" class="saveAddrBtn">Proceed To Payment</button>
                                </div>
                            }
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

