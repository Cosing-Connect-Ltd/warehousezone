@using Ganedata.Core.Entities.Domain
@using Ganedata.Core.Entities.Enums
@model PagedList.IPagedList<ProductMaster>
@using PagedList.Mvc;
@{
    var UrlQuery = Request.Url.OriginalString;
    string values = "";
    string Manufacturer = "";
    if (UrlQuery.Contains("values="))
    {
        var startindex = UrlQuery.IndexOf("values=");
        var lastindex = UrlQuery.Length - startindex;
        values = UrlQuery.Substring(startindex, lastindex).Replace("values=", "");
        var breadcumbstring = values.Split('/');
    }

}


<div id="product-search" class="container custom-max-width">
    <div class="row">
        @Html.Hidden("valuesParameter", (string)values)
        @Html.Action("_DynamicFilters", new { category = ViewBag.Category, productName = ViewBag.CurrentFilter })
        <div id="content" class="col-md-9 col-sm-12">
            <ul class="breadcrumb">
                <li><a href="/">Home</a></li>
                @if (!string.IsNullOrWhiteSpace(ViewBag.Category))
                {
                    <li><a href="@Url.Action("list","Products",new { category=ViewBag.Category})">@ViewBag.Category </a></li>
                }
                else if (!string.IsNullOrWhiteSpace(Manufacturer))
                {
                    <li>@(Manufacturer.Replace("BrandS-", "").Replace("^", ",").Replace("_", " ").Replace("%5E", ",") ?? "")</li>
                    ViewBag.Title = (Manufacturer.Replace("BrandS-", "").Replace("^", ",").Replace("_", " ").Replace("%5E", ",") ?? "") + " | " + ViewBag.SiteDescription;
                }

            </ul>

            <div class="row cate-border">
                <div class="col-md-2 col-sm-3 col-xs-5">
                    <div class="btn-group-sm">
                        <button type="button" id="list-view" class="btn listgridbtn" data-toggle="tooltip" title="List">
                            <svg width="20px" height="20px">
                                <use xlink:href="/Content/Theme/Smart/app/img/icons/icons.svg#clist"></use>
                            </svg>
                        </button>
                        <button type="button" id="grid-view" class="btn listgridbtn" data-toggle="tooltip" title="Grid">
                            <svg width="20px" height="20px">
                                <use xlink:href="/Content/Theme/Smart/app/img/icons/icons.svg#cgrid"></use>
                            </svg>
                        </button>
                    </div>
                </div>
                <input type="text" id="currentsortedvalue" value="@(ViewBag.CurrentSort ?? " ")" style="display:none" />
                <input type="text" id="currentFiltervalue" value="@(ViewBag.CurrentFilter ?? " ")" style="display:none" />
                <input type="text" id="searchString" value="@(ViewBag.searchString ?? " ")" style="display:none" />

                <div class="col-lg-4 col-md-5 col-xs-4 col-sm-5 catesort">
                    <div class="input-group input-group-sm select-input">
                        <label class="input-group-addon" for="input-sort">Sort By:</label>
                        <input type="text" id="pagenumber" value="@Model.PageNumber" style="display:none" />
                        @Html.DropDownList("SortedValues", EnumHelper.GetSelectList(typeof(SortProductTypeEnum)), htmlAttributes: new { @class = "form-control", onchange = "searchPoducts();" })

                    </div>
                </div>
                <div class="col-lg-3 col-md-5 col-xs-3 col-sm-4 catesort">
                    <div class="input-group input-group-sm select-input">
                        <label class="input-group-addon" for="input-limit">Show:</label>
                        @Html.DropDownList("input-limit", ViewBag.pageList as SelectList, htmlAttributes: new { @class = "form-control", onchange = "searchPoducts();" })

                    </div>
                </div>


            </div>
            <div class="row productspm product-cat">
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <div class="product-layout product-list col-xs-12">
                            <div class="product-thumb transition single-product-cat">
                                <div class="image">
                                    <a href="@Url.Action("ProductDetails","Products", new {sku=item.SKUCode})"><img src="@(!string.IsNullOrEmpty(item.DefaultImage) ? ViewBag.BaseFilePath + item.DefaultImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" title="@item.Name" alt="@item.Name" class="img-responsive center-block" /></a>
                                    <a href="@Url.Action("ProductDetails", "Products" , new { sku=item.SKUCode })"><img src="@(!string.IsNullOrEmpty(item.HoverImage) ? ViewBag.BaseFilePath +item.HoverImage : ViewBag.BaseFilePath + "/UploadedFiles/Products/no_image.gif")" class="img-responsive second-img" title="@item.Name" alt="@item.Name" /></a>
                                    <span class="salep">sale</span>
                                    <div class="topbutton">
                                        <button type="button" data-toggle="tooltip" title="Add to Wish List">
                                            <svg width="20px" height="20px">
                                                <use xlink:href="/Content/Theme/Smart/app/img/icons/icons.svg#wishlist"></use>
                                            </svg>
                                            <span class="d-xs-none"></span>
                                        </button>
                                        <button type="button" data-toggle="tooltip" title="Compare this Product" class="wishcom">
                                            <svg width="20px" height="20px">
                                                <use xlink:href="/Content/Theme/Smart/app/img/icons/icons.svg#pcom"></use>
                                            </svg>
                                            <span class="d-xs-none"></span>
                                        </button>
                                        <div class="bquickv" title="quickview" data-toggle="tooltip"></div>
                                    </div>
                                </div>
                                <div class="caption">
                                    <h4><a href="@Url.Action("ProductDetails","Products", new {sku=item.SKUCode})">@item.Name</a></h4>
                                    <div class="rating pull-left">
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                        <span class="fa fa-stack"><i class="fa fa-star-o fa-stack-2x"></i></span>
                                    </div>
                                    <p class="pricedis price text-right">@*<span class="price-new">@ViewBag.CurrencySymbol@item.MinThresholdPrice</span>*@ <span class="price-old">@ViewBag.CurrencySymbol @item.SellPrice</span></p>
                                    <div class="clearfix"></div>
                                    <div class="button-group">
                                        @if (@item.SellPrice > 0 && @item.SellPrice.HasValue && @item.PercentMargin > 0)
                                        {
                                            <a href="javascript:;" type="button" class="acart" onclick="AddToCart(@item.ProductId)">
                                                <span>Add to Basket</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="javascript:;" type="button" class="acart disabled-btn" disabled>
                                                <span>Add to Basket</span>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }

                <input type="hidden" id="prod-category" value="@ViewBag.Category" />
            </div>
            <div class="row pagi">
                <div class="col-sm-6 col-xs-6 text-left pagination">

                    @Html.PagedListPager(Model, page => Url.Action("list", new { sort = ViewBag.CurrentSort, filter = ViewBag.CurrentFilter, page = page, pagesize = Model.PageSize, category = ViewBag.Category, values = values }))


                </div>
                <div class="col-sm-6 col-xs-6 text-right tot">
                    @if (Model.TotalItemCount > Model.PageSize)
                    {
                        <p>Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) to @Model.PageSize of @(Model.TotalItemCount)</p>
                    }


                </div>
            </div>

        </div>

    </div>
</div>



<script>
    function GetSortedList(e) {
        var sortvalue = parseInt(e.currentTarget.value);
        var groupId = $("#ProductGroups").val();
        if (groupId === "" || groupId === undefined || groupId === null) { groupId = $("#ProductGroupsId").val(); }
        var pagenumber = $("#pagenumber").val();
        var departmentId = $("#departmentId").val();
        var currentFilter = $("#currentFiltervalue").val();
        var searchstring = $("#searchString").val();
        var pageSize = $("#input-limit :selected").val();
        var valuesparam = $("#valuesParameter").val();
        var subCategory = $("#SubCategoryId").val();
        window.location.href = basePath + "/Products/list?productGroup=" + groupId + "&sortOrder=" + sortvalue + "&currentFilter=" + currentFilter + "&searchString=" + searchstring + "&page=" + pagenumber + "&pagesize=" + pageSize + "&department=" + departmentId + "&SubCategory=" + subCategory + "&values=" + valuesparam;
    }

    function PageSizeChanges(e) {
        var pageSize = parseInt(e.currentTarget.value);
        var sortvalue = $("#SortedValues").val();
        var groupId = $("#ProductGroups").val();
        if (groupId === "" || groupId === undefined || groupId === null) { groupId = $("#ProductGroupsId").val(); }
        var pagenumber = $("#pagenumber").val();
        var departmentId = $("#departmentId").val();
        var currentFilter = $("#currentFiltervalue").val();
        var searchstring = $("#searchString").val();
        var subCategory = $("#SubCategoryId").val();
        var valuesparam = $("#valuesParameter").val();
        window.location.href = basePath + "/Products/list?productGroup=" + groupId + "&sortOrder=" + sortvalue + "&currentFilter=" + currentFilter + "&searchString=" + searchstring + "&page=" + pagenumber + "&pagesize=" + pageSize + "&department=" + departmentId + "&SubCategory=" + subCategory + "&values=" + valuesparam;
    }

</script>
